{"version":3,"sources":["../../../lib/bumblebee.js","../../../lib/porcupine.js","../../../lib/pv_porcupine.js","../../../lib/picovoiceAudioManager.js","../../test-web/src/BumbleBeeApp.js","../../test-web/src/serviceWorker.js","../../test-web/src/index.js"],"names":["Porcupine","__webpack_require__","PicovoiceAudioManager","hotwords","bumblebee","Uint8Array","porcupine","dragonfly","caterpillar","grasshopper","terminator","christina","francesca","hotwordNames","Object","keys","BumbleBee","options","hotword","this","setHotword","sensitivity","prototype","w","indexOf","Error","s","sensitivities","Float32Array","stop","audioManager","createPorcupine","create","values","start","callback","_this","keywordIndex","keyword","console","log","e","module","exports","initWasm","releaseWasm","processWasm","sampleRate","frameLength","version","porcupineModule","PorcupineModule","then","Module","cwrap","keywordIDs","keywordIDSizes","Int32Array","from","map","keywordID","byteLength","keywordIDSizesPointer","_malloc","HEAPU8","buffer","set","keywordIDPointers","Uint32Array","heapPointer","keywordIDPointersPointer","sensitivitiesPointer","handleWasm","length","pcmWasmPointer","release","_free","process","pcmInt16Array","keyword_index","__dirname","key","moduleOverrides","hasOwnProperty","status","toThrow","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","window","importScripts","nodeFS","nodePath","scriptDirectory","locateFile","path","filename","binary","ret","toString","assert","replace","slice","ex","ExitStatus","reason","p","read","f","data","readbuffer","scriptArgs","arguments","quit","document","location","href","substring","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","onload","onerror","title","out","bind","print","err","printErr","warn","undefined","STACK_ALIGN","alignMemory","size","factor","Math","ceil","asm2wasmImports","f64-rem","x","y","debugger","Array","ABORT","condition","text","abort","getCFunc","ident","func","JSfuncs","stackSave","_stackSave","stackRestore","_stackRestore","arrayToC","arr","array","stackAlloc","HEAP8","stringToC","str","len","outPtr","maxBytesToWrite","outU8Array","outIdx","endIdx","i","u","charCodeAt","u1","stringToUTF8Array","stringToUTF8","toC","string","Pointer_stringify","ptr","t","hasUtf","curr","String","fromCharCode","apply","subarray","min","UTF8ArrayToString","UTF8ToString","UTF8Decoder","TextDecoder","u8Array","idx","endPtr","decode","u0","u2","u3","u4","ch","HEAP32","STATICTOP","STACK_BASE","STACKTOP","STACK_MAX","DYNAMIC_BASE","DYNAMICTOP_PTR","WASM_PAGE_SIZE","ASMJS_PAGE_SIZE","updateGlobalBufferViews","Int8Array","Int16Array","Uint16Array","Float64Array","abortOnCannotGrowMemory","TOTAL_MEMORY","enlargeMemory","TOTAL_STACK","callRuntimeCallbacks","callbacks","shift","arg","WebAssembly","Memory","initial","maximum","ArrayBuffer","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runtimeInitialized","abs","floor","runDependencies","runDependencyWatcher","dependenciesFulfilled","dataURIPrefix","isDataURI","startsWith","wasmTextFile","wasmBinaryFile","asmjsCodeFile","info","global","env","asm2wasm","parent","mergeMemory","newBuffer","oldBuffer","buf","oldView","getBinary","doNativeWasm","providedBuffer","receiveInstance","instance","memory","id","clearInterval","removeRunDependency","NaN","Infinity","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","fetch","Promise","resolve","reject","credentials","catch","instantiate","instantiateStreaming","asmjsReallocBuffer","finalMethod","multiple","PAGE_MULTIPLE","oldSize","grow","wasmReallocBuffer","TABLE_SIZE","MAX_TABLE_SIZE","Table","element","integrateWasmJS","STATIC_BASE","push","tempDoublePtr","SYSCALLS","varargs","get","getStr","get64","low","high","getZero","___syscall146","which","stream","iov","iovcnt","buffers","printChar","j","FS","ErrnoError","errno","_llvm_stacksave","self","LLVM_SAVEDSTACKS","staticAlloc","asmGlobalArg","asmLibraryArg","getTotalMemory","invoke_ii","index","a1","sp","invoke_iiii","a2","a3","___setErrNo","value","___syscall140","getStreamFromFD","offset_low","result","whence","offset","llseek","position","getdents","___syscall54","___syscall6","close","_emscripten_memcpy_big","dest","src","num","_llvm_stackrestore","splice","_time","Date","now","flush_NO_FILESYSTEM","fflush","asm","name","message","run","args","doRun","cb","unshift","postRun","preRun","setTimeout","what","JSON","stringify","returnType","argTypes","opts","numericArgs","every","type","cArgs","stack","converter","Boolean","convertReturnValue","ccall","old","constructor","runCaller","pop","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","inputSampleRate","engine","processCallback","isProcessing","inputAudioBuffer","getUserMediaSuccessCallback","audioSource","AudioContext","webkitAudioContext","createMediaStreamSource","context","engineNode","createScriptProcessor","onaudioprocess","ev","inputAudioFrame","bin","indexIn","indexOut","inputBuffer","getChannelData","connect","destination","picovoiceEngine","picovoiceProcessCallback","errorCallback","audio","BumbleBeeApp","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bumblebee_started","spokenHotwords","selectedHotword","sensivitiyChanged","sound","Audio","_this2","react_default","a","createElement","className","onChange","changeHotword","renderHotwordOptions","changeSensitivity","renderSensitivities","onClick","toggleHotword","renderSay","renderBumblebees","join","h","n","target","selectedIndex","alert","setState","_this3","word","recognizeHotword","play","b","Component","hostname","match","ReactDOM","render","src_BumbleBeeApp","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60575932.chunk.js","sourcesContent":["var Porcupine = require('./porcupine');\n\nvar PicovoiceAudioManager = require('./picovoiceAudioManager');\n\nvar hotwords = {\n  'bumblebee': new Uint8Array([0x0a, 0x08, 0xb8, 0x86, 0x43, 0x36, 0x86, 0x44, 0x95, 0x3f, 0x82, 0x61, 0xe1, 0x06, 0xea, 0x3e, 0xf8, 0xca, 0x17, 0xe0, 0x9e, 0x34, 0xa7, 0x6d, 0x6f, 0x7f, 0x31, 0x1d, 0x70, 0x7a, 0x59, 0x43, 0xe0, 0xe7, 0xa0, 0xce, 0x31, 0xe5, 0x13, 0x3b, 0x89, 0xd2, 0x38, 0xc4, 0x96, 0xd0, 0x52, 0xde, 0x6b, 0xe1, 0x44, 0x52, 0x81, 0x9e, 0x66, 0xd9, 0xf5, 0xe1, 0xd6, 0xef, 0xa0, 0xd4, 0xf5, 0x17, 0xbe, 0xca, 0x02, 0x87, 0xa1, 0xc8, 0x89, 0x4c, 0x30, 0x3c, 0x6e, 0x34, 0x63, 0x6d, 0x3b, 0x13, 0x1c, 0x88, 0x9c, 0x7c, 0xc8, 0xf2, 0xc5, 0x1a, 0xaf, 0xec, 0x95, 0x95]),\n  'porcupine': new Uint8Array([0x5e, 0x43, 0x55, 0x12, 0xbb, 0xb0, 0xdf, 0x66, 0x9d, 0x76, 0x73, 0xc6, 0x18, 0x18, 0x4c, 0x65, 0x29, 0x85, 0xe4, 0x40, 0x8a, 0x8b, 0x4e, 0xf3, 0x1c, 0xd7, 0xc2, 0x2a, 0x45, 0x95, 0x92, 0x94, 0x5e, 0x3a, 0x39, 0x1b, 0x78, 0x28, 0xcb, 0x0c, 0x91, 0x32, 0x77, 0x5b, 0xe5, 0xe4, 0xec, 0x11, 0x44, 0x40, 0xa1, 0x0f, 0xd0, 0x91, 0x83, 0x28, 0x7c, 0x6c, 0x5a, 0xc4, 0xf1, 0x0d, 0x3c, 0x06, 0x27, 0xc5, 0x89, 0x6d, 0xcc, 0x6a, 0x5e, 0xbf, 0xa1, 0xb1, 0x12, 0x47, 0xa3, 0x57, 0xa7, 0x80, 0x9b, 0xa1, 0xd8, 0x30, 0x90, 0xb4, 0x57, 0x1d, 0x42, 0xf1, 0xdf, 0x83, 0xb4, 0x16, 0xf6, 0x8c]),\n  'dragonfly': new Uint8Array([0xb4, 0xca, 0xdb, 0x48, 0xed, 0x24, 0xe0, 0xa0, 0x91, 0x7e, 0xd3, 0xba, 0xf2, 0x4d, 0x06, 0xbd, 0x0e, 0x42, 0xb8, 0x00, 0xb3, 0x9f, 0x2e, 0xd4, 0x46, 0xd2, 0x83, 0xc4, 0xe0, 0x02, 0x11, 0x4a, 0x0f, 0x7a, 0x0c, 0xc7, 0xb0, 0x2a, 0x80, 0xb7, 0x7a, 0x52, 0x93, 0x46, 0x24, 0xf3, 0xa8, 0x4a, 0xb5, 0x21, 0xa6, 0x80, 0x9e, 0x00, 0xcd, 0xef, 0x5a, 0x4e, 0xaf, 0xc3, 0x58, 0x86, 0x88, 0x0a, 0x8c, 0x1c, 0x63, 0x9b, 0xfb, 0x84, 0xfc, 0x06, 0xc4, 0x39, 0x29, 0xee, 0xf6, 0x47, 0x12, 0xf7, 0xce, 0x73, 0xc8, 0xd6, 0x86, 0xae, 0x7d, 0xa3, 0x9a, 0xa8, 0xc1, 0x7b, 0xfd, 0x1b, 0xd7, 0xe3]),\n  'caterpillar': new Uint8Array([0x78, 0xe7, 0x28, 0xff, 0xe0, 0xef, 0xc4, 0x4c, 0x52, 0xe6, 0x85, 0x6e, 0xcd, 0x4b, 0x0c, 0x6d, 0xaa, 0x70, 0x2d, 0xd5, 0x08, 0x60, 0x63, 0x3d, 0xf3, 0x66, 0x96, 0x55, 0xbb, 0x2d, 0xb8, 0x82, 0xc6, 0x31, 0xca, 0x17, 0x1f, 0x0e, 0xf3, 0xfc, 0x35, 0x9d, 0x0b, 0x39, 0xc0, 0x4b, 0xfa, 0x04, 0x13, 0x08, 0x76, 0x06, 0xde, 0x7c, 0xd3, 0xd6, 0x87, 0xff, 0x02, 0x4a, 0x42, 0x24, 0xf9, 0xf6, 0x7b, 0x2e, 0x4e, 0x21, 0x54, 0x4f, 0x93, 0x86, 0xf4, 0x4a, 0xd8, 0xa3, 0xea, 0xfb, 0x9e, 0xc3, 0xfc, 0x94, 0x7e, 0xe6, 0xa6, 0x9f, 0xfb, 0xb7, 0x21, 0xe0, 0x3f, 0x3d, 0x3a, 0x00, 0x3c, 0x1d]),\n  'grasshopper': new Uint8Array([0x74, 0x40, 0x9f, 0xdd, 0x13, 0xae, 0xbb, 0x7e, 0x02, 0xd1, 0x68, 0x72, 0xd8, 0x43, 0xc7, 0x13, 0xa8, 0x97, 0xfc, 0x35, 0x90, 0xc8, 0xa5, 0x08, 0x9a, 0xb4, 0x94, 0x62, 0x2d, 0xab, 0xb9, 0x32, 0xfa, 0xfe, 0xe2, 0xc8, 0xe8, 0x46, 0xb6, 0x71, 0x53, 0x22, 0xd9, 0x7b, 0x3f, 0xed, 0x26, 0x85, 0x5f, 0x95, 0x4b, 0xbe, 0x53, 0xe2, 0x6b, 0x72, 0x46, 0xf1, 0x0b, 0x76, 0xd9, 0xbd, 0xc6, 0xe6, 0x93, 0x17, 0xbc, 0x77, 0x7a, 0x2c, 0x72, 0x7d, 0x11, 0x0b, 0x5f, 0xd9, 0x3d, 0xcf, 0x35, 0x7d, 0x9c, 0x75, 0x80, 0x33, 0x1b, 0x05, 0xd5, 0x81, 0x7a, 0xb0, 0x58, 0x6c, 0xab, 0x66, 0xb9, 0x5b]),\n  'terminator': new Uint8Array([0x9a, 0x99, 0x4e, 0x73, 0x8d, 0xce, 0x0f, 0x97, 0x8e, 0xe0, 0x8d, 0x56, 0xba, 0x3e, 0x2b, 0x45, 0xdb, 0x29, 0x73, 0xcd, 0xf3, 0x6b, 0xdc, 0x00, 0xe2, 0x61, 0x40, 0x30, 0x45, 0x67, 0x11, 0x21, 0x0e, 0x76, 0x58, 0x5e, 0x19, 0xe2, 0x07, 0x4f, 0xe1, 0xab, 0x58, 0xd9, 0x74, 0x54, 0x28, 0x23, 0xa7, 0x52, 0x9c, 0x66, 0x5f, 0x4d, 0xdf, 0x1b, 0x17, 0xa5, 0x64, 0xc0, 0xfc, 0xd1, 0x16, 0x22, 0x00, 0x89, 0x13, 0x98, 0x2b, 0x22, 0x29, 0xc3, 0x7a, 0xc9, 0x15, 0x76, 0x3a, 0x6d, 0xcd, 0x1c, 0xa1, 0xb9, 0xf2, 0x03, 0x43, 0x30, 0x62, 0x09, 0x80, 0xa2, 0x26, 0xd2]),\n  'christina': new Uint8Array([0x3a, 0xcf, 0x5f, 0x5e, 0xf4, 0x96, 0x22, 0x62, 0x67, 0xc2, 0xbe, 0x20, 0xfe, 0x8d, 0x0f, 0x4e, 0x32, 0x55, 0x2f, 0xc8, 0x0d, 0x48, 0x84, 0xa5, 0x59, 0x26, 0xed, 0x2d, 0x86, 0xd6, 0x67, 0x47, 0x7a, 0xa1, 0x02, 0x14, 0x8f, 0xd9, 0x4f, 0xd1, 0x1f, 0x85, 0x99, 0xcd, 0x00, 0xaf, 0x0c, 0xf2, 0xbb, 0x4d, 0x6d, 0x03, 0x32, 0x96, 0x9c, 0x14, 0x47, 0xcc, 0x1f, 0xcb, 0x27, 0x60, 0xb8, 0xd4, 0xd2, 0x29, 0xea, 0x8a, 0xe4, 0xab, 0x84, 0xc7, 0x1f, 0x59, 0x5f, 0xfb, 0x96, 0xd2, 0xb5, 0xe5, 0x4e, 0x6a, 0x01, 0x61, 0xe2, 0x96, 0x6f, 0x3f, 0xb0, 0x07, 0x73, 0xd2]),\n  'francesca': new Uint8Array([0x1d, 0xaa, 0x4e, 0x09, 0xa1, 0x59, 0xed, 0xc5, 0x06, 0xc0, 0x88, 0x32, 0x4e, 0x76, 0x0a, 0xe5, 0x99, 0xca, 0x77, 0x83, 0x1c, 0xf0, 0xca, 0x18, 0xb7, 0xc8, 0x7e, 0x64, 0x6d, 0x23, 0x44, 0xfc, 0x12, 0xdd, 0xc1, 0x03, 0x21, 0x9c, 0x13, 0x6b, 0x8d, 0xf5, 0x9a, 0xfc, 0xb7, 0x0c, 0x07, 0xaa, 0xf8, 0x5a, 0x84, 0x62, 0x22, 0xba, 0xf4, 0xf6, 0x4a, 0x95, 0x68, 0xf6, 0xf9, 0x42, 0x5b, 0xa5, 0x0a, 0xbd, 0x4b, 0x82, 0xce, 0x9d, 0x71, 0x32, 0x9c, 0x96, 0x6b, 0xd8, 0x95, 0xff, 0x16, 0x6b, 0xfa, 0xfa, 0xd7, 0x6c, 0x9c, 0x20, 0x15, 0xcb, 0x17, 0x54, 0x7e, 0x13, 0xc9, 0x2b, 0x37, 0x72])\n};\nvar hotwordNames = Object.keys(hotwords); // let processCallback = function (keywordIndex) {\n// \tlet keyword = keywordNames[keywordIndex];\n// \tif (keyword === \"bumblebee\") {\n// \t\talert('bumblebee');\n// \t}\n// };\n// let sensitivities;\n// function bumblebee(callback) {\n// \treturn bumblebee.start('bumblebee', callback);\n// }\n\nfunction BumbleBee(options) {\n  if (options && options.hotword) {\n    this.setHotword(options.hotword);\n  }\n\n  if (options && options.sensitivity) {\n    this.sensitivity(options.sensitivity);\n  }\n}\n\nBumbleBee.prototype.setHotword = function (w) {\n  if (w === null || w === '') {\n    this.hotword = null;\n  } else if (hotwordNames.indexOf(w) > -1) {\n    this.hotword = w;\n  } else {\n    throw new Error('invalid hotword');\n  }\n};\n\nBumbleBee.prototype.sensitivity = function (s) {\n  this.sensitivities = new Float32Array([s, 1, 1, 1, 1, 1]);\n};\n\nBumbleBee.prototype.stop = function () {\n  this.audioManager.stop();\n};\n\nBumbleBee.prototype.createPorcupine = function () {\n  if (!this.porcupine) {\n    this.porcupine = Porcupine.create(Object.values(hotwords), this.sensitivities);\n  }\n\n  return this.porcupine;\n};\n\nBumbleBee.prototype.start = function (callback) {\n  var _this = this;\n\n  this.audioManager = new PicovoiceAudioManager();\n  this.audioManager.start(this.createPorcupine(), function (keywordIndex) {\n    if (keywordIndex > -1) {\n      var keyword = hotwordNames[keywordIndex];\n\n      if (_this.hotword === null) {\n        if (callback) callback(keyword);\n      } else if (keyword === _this.hotword) {\n        if (callback) callback(_this.hotword);\n      } else {\n        console.log('invalid key', keywordIndex, keyword);\n      }\n    }\n  }, function (e) {\n    console.log('error', e);\n    debugger;\n  });\n};\n\nvar bumblebee = new BumbleBee({\n  hotword: 'bumblebee',\n  sensitivity: 0.5\n});\nmodule.exports = bumblebee;","var PorcupineModule = require('./pv_porcupine');\n/**\n * Binding for wake word detection object. It initializes the JS binding for WebAssembly module and exposes\n * a factory method for creating new instances of wake word engine.\n */\n\n\nvar initWasm;\nvar releaseWasm;\nvar processWasm;\nvar sampleRate;\nvar frameLength;\nvar version;\nvar porcupineModule = PorcupineModule();\nporcupineModule.then(function (Module) {\n  initWasm = Module.cwrap('pv_porcupine_wasm_init', 'number', ['number', 'number', 'number', 'number']);\n  releaseWasm = Module.cwrap('pv_porcupine_wasm_delete', ['number']);\n  processWasm = Module.cwrap('pv_porcupine_wasm_process', 'number', ['number', 'number']);\n  sampleRate = Module.cwrap('pv_wasm_sample_rate', 'number', [])();\n  frameLength = Module.cwrap('pv_porcupine_wasm_frame_length', 'number', [])();\n  version = Module.cwrap('pv_porcupine_wasm_version', 'string', [])();\n});\n\nvar create = function create(keywordIDs, sensitivities) {\n  /**\n   * Creates an instance of wake word detection engine (aka porcupine).\n   * @param {Array} Array of keyword IDs. A keyword ID is the signature for a given phrase to be detected. Each\n   * keyword ID should be stored as UInt8Array.\n   * @param {Float32Array} Detection sensitivity. A higher sensitivity reduces miss rate at the cost of higher\n   * false alarm rate. Sensitivity is a number within [0, 1].\n   * @returns An instance of wake word detection engine.\n   */\n  var keywordIDSizes = Int32Array.from(keywordIDs.map(function (keywordID) {\n    return keywordID.byteLength;\n  }));\n\n  var keywordIDSizesPointer = porcupineModule._malloc(keywordIDSizes.byteLength);\n\n  var keywordIDSizesBuffer = new Uint8Array(porcupineModule.HEAPU8.buffer, keywordIDSizesPointer, keywordIDSizes.byteLength);\n  keywordIDSizesBuffer.set(new Uint8Array(keywordIDSizes.buffer));\n  var keywordIDPointers = Uint32Array.from(keywordIDs.map(function (keywordID) {\n    var heapPointer = porcupineModule._malloc(keywordID.byteLength);\n\n    var heapBuffer = new Uint8Array(porcupineModule.HEAPU8.buffer, heapPointer, keywordID.byteLength);\n    heapBuffer.set(keywordID);\n    return heapPointer;\n  }));\n\n  var keywordIDPointersPointer = porcupineModule._malloc(keywordIDPointers.byteLength);\n\n  var keywordIDPointersBuffer = new Uint8Array(porcupineModule.HEAPU8.buffer, keywordIDPointersPointer, keywordIDPointers.byteLength);\n  keywordIDPointersBuffer.set(new Uint8Array(keywordIDPointers.buffer));\n\n  var sensitivitiesPointer = porcupineModule._malloc(sensitivities.byteLength);\n\n  var sensitivitiesBuffer = new Uint8Array(porcupineModule.HEAPU8.buffer, sensitivitiesPointer, sensitivities.byteLength);\n  sensitivitiesBuffer.set(new Uint8Array(sensitivities.buffer));\n  var handleWasm = initWasm(keywordIDs.length, keywordIDSizesPointer, keywordIDPointersPointer, sensitivitiesPointer);\n\n  if (handleWasm === 0) {\n    throw new Error(\"failed to initialize porcupine.\");\n  }\n\n  var pcmWasmPointer = porcupineModule._malloc(this.frameLength * 2);\n\n  var release = function release() {\n    /**\n     * Releases resources acquired by WebAssembly module.\n     */\n    releaseWasm(handleWasm);\n\n    porcupineModule._free(pcmWasmPointer);\n  };\n\n  var process = function process(pcmInt16Array) {\n    /**\n     * Processes a frame of audio. The required sample rate can be retrieved from .sampleRate and the length of\n     * frame (number of samples within frame) can be retrieved from .frameLength.\n     * @param {Int16Array} A frame of audio with properties described above.\n     * @returns {Number} Index of detected keyword (phrase). When no keyword is detected it returns -1.\n     */\n    var pcmWasmBuffer = new Uint8Array(porcupineModule.HEAPU8.buffer, pcmWasmPointer, pcmInt16Array.byteLength);\n    pcmWasmBuffer.set(new Uint8Array(pcmInt16Array.buffer));\n    var keyword_index = processWasm(handleWasm, pcmWasmPointer);\n\n    if (keyword_index === -2) {\n      throw new Error(\"porcupine failed to process audio\");\n    }\n\n    return keyword_index;\n  };\n\n  return {\n    release: release,\n    process: process,\n    sampleRate: sampleRate,\n    frameLength: frameLength,\n    version: version\n  };\n};\n\nmodule.exports = {\n  create: create\n};","var PorcupineModule = function () {\n  // var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  var _scriptDir = '';\n  return function (PorcupineModule) {\n    PorcupineModule = PorcupineModule || {};\n    var Module = typeof PorcupineModule !== \"undefined\" ? PorcupineModule : {};\n    var moduleOverrides = {};\n    var key;\n\n    for (key in Module) {\n      if (Module.hasOwnProperty(key)) {\n        moduleOverrides[key] = Module[key];\n      }\n    }\n\n    Module[\"arguments\"] = [];\n    Module[\"thisProgram\"] = \"./this.program\";\n\n    Module[\"quit\"] = function (status, toThrow) {\n      throw toThrow;\n    };\n\n    Module[\"preRun\"] = [];\n    Module[\"postRun\"] = [];\n    var ENVIRONMENT_IS_WEB = false;\n    var ENVIRONMENT_IS_WORKER = false;\n    var ENVIRONMENT_IS_NODE = false;\n    var ENVIRONMENT_IS_SHELL = false;\n    ENVIRONMENT_IS_WEB = typeof window === \"object\";\n    ENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n    ENVIRONMENT_IS_NODE = typeof process === \"object\" && typeof require === \"function\" && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;\n    ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n    var scriptDirectory = \"\";\n\n    function locateFile(path) {\n      if (Module[\"locateFile\"]) {\n        return Module[\"locateFile\"](path, scriptDirectory);\n      } else {\n        return scriptDirectory + path;\n      }\n    }\n\n    if (ENVIRONMENT_IS_NODE) {\n      scriptDirectory = __dirname + \"/\";\n      var nodeFS;\n      var nodePath;\n\n      Module[\"read\"] = function shell_read(filename, binary) {\n        var ret;\n        if (!nodeFS) nodeFS = require(\"fs\");\n        if (!nodePath) nodePath = require(\"path\");\n        filename = nodePath[\"normalize\"](filename);\n        ret = nodeFS[\"readFileSync\"](filename);\n        return binary ? ret : ret.toString();\n      };\n\n      Module[\"readBinary\"] = function readBinary(filename) {\n        var ret = Module[\"read\"](filename, true);\n\n        if (!ret.buffer) {\n          ret = new Uint8Array(ret);\n        }\n\n        assert(ret.buffer);\n        return ret;\n      };\n\n      if (process[\"argv\"].length > 1) {\n        Module[\"thisProgram\"] = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n      }\n\n      Module[\"arguments\"] = process[\"argv\"].slice(2);\n      process[\"on\"](\"uncaughtException\", function (ex) {\n        if (!(ex instanceof ExitStatus)) {\n          throw ex;\n        }\n      });\n      process[\"on\"](\"unhandledRejection\", function (reason, p) {\n        process[\"exit\"](1);\n      });\n\n      Module[\"quit\"] = function (status) {\n        process[\"exit\"](status);\n      };\n\n      Module[\"inspect\"] = function () {\n        return \"[Emscripten Module object]\";\n      };\n    } else if (ENVIRONMENT_IS_SHELL) {\n      if (typeof read != \"undefined\") {\n        Module[\"read\"] = function shell_read(f) {\n          return read(f);\n        };\n      }\n\n      Module[\"readBinary\"] = function readBinary(f) {\n        var data;\n\n        if (typeof readbuffer === \"function\") {\n          return new Uint8Array(readbuffer(f));\n        }\n\n        data = read(f, \"binary\");\n        assert(typeof data === \"object\");\n        return data;\n      };\n\n      if (typeof scriptArgs != \"undefined\") {\n        Module[\"arguments\"] = scriptArgs;\n      } else if (typeof arguments != \"undefined\") {\n        Module[\"arguments\"] = arguments;\n      }\n\n      if (typeof quit === \"function\") {\n        Module[\"quit\"] = function (status) {\n          quit(status);\n        };\n      }\n    } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      // if (ENVIRONMENT_IS_WEB) {\n      // \tif (document.currentScript) {\n      // \t\tscriptDirectory = document.currentScript.src\n      // \t}\n      // } else {\n      // \tscriptDirectory = self.location.href\n      // }\n      // if (_scriptDir) {\n      // \tscriptDirectory = _scriptDir\n      // }\n      // if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n      // \tscriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1)\n      // } else {\n      // \tscriptDirectory = \"\"\n      // }\n      scriptDirectory = document.location.href.substring(0, document.location.href.lastIndexOf('/') + 1);\n\n      Module[\"read\"] = function shell_read(url) {\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", url, false);\n        xhr.send(null);\n        return xhr.responseText;\n      };\n\n      if (ENVIRONMENT_IS_WORKER) {\n        Module[\"readBinary\"] = function readBinary(url) {\n          var xhr = new XMLHttpRequest();\n          xhr.open(\"GET\", url, false);\n          xhr.responseType = \"arraybuffer\";\n          xhr.send(null);\n          return new Uint8Array(xhr.response);\n        };\n      }\n\n      Module[\"readAsync\"] = function readAsync(url, onload, onerror) {\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", url, true);\n        xhr.responseType = \"arraybuffer\";\n\n        xhr.onload = function xhr_onload() {\n          if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n            onload(xhr.response);\n            return;\n          }\n\n          onerror();\n        };\n\n        xhr.onerror = onerror;\n        xhr.send(null);\n      };\n\n      Module[\"setWindowTitle\"] = function (title) {\n        document.title = title;\n      };\n    } else {}\n\n    var out = Module[\"print\"] || (typeof console !== \"undefined\" ? console.log.bind(console) : typeof print !== \"undefined\" ? print : null);\n    var err = Module[\"printErr\"] || (typeof printErr !== \"undefined\" ? printErr : typeof console !== \"undefined\" && console.warn.bind(console) || out);\n\n    for (key in moduleOverrides) {\n      if (moduleOverrides.hasOwnProperty(key)) {\n        Module[key] = moduleOverrides[key];\n      }\n    }\n\n    moduleOverrides = undefined;\n    var STACK_ALIGN = 16;\n\n    function staticAlloc(size) {\n      var ret = STATICTOP;\n      STATICTOP = STATICTOP + size + 15 & -16;\n      return ret;\n    }\n\n    function dynamicAlloc(size) {\n      var ret = HEAP32[DYNAMICTOP_PTR >> 2];\n      var end = ret + size + 15 & -16;\n      HEAP32[DYNAMICTOP_PTR >> 2] = end;\n\n      if (end >= TOTAL_MEMORY) {\n        var success = enlargeMemory();\n\n        if (!success) {\n          HEAP32[DYNAMICTOP_PTR >> 2] = ret;\n          return 0;\n        }\n      }\n\n      return ret;\n    }\n\n    function alignMemory(size, factor) {\n      if (!factor) factor = STACK_ALIGN;\n      var ret = size = Math.ceil(size / factor) * factor;\n      return ret;\n    }\n\n    function getNativeTypeSize(type) {\n      switch (type) {\n        case \"i1\":\n        case \"i8\":\n          return 1;\n\n        case \"i16\":\n          return 2;\n\n        case \"i32\":\n          return 4;\n\n        case \"i64\":\n          return 8;\n\n        case \"float\":\n          return 4;\n\n        case \"double\":\n          return 8;\n\n        default:\n          {\n            if (type[type.length - 1] === \"*\") {\n              return 4;\n            } else if (type[0] === \"i\") {\n              var bits = parseInt(type.substr(1));\n              assert(bits % 8 === 0);\n              return bits / 8;\n            } else {\n              return 0;\n            }\n          }\n      }\n    }\n\n    function warnOnce(text) {\n      if (!warnOnce.shown) warnOnce.shown = {};\n\n      if (!warnOnce.shown[text]) {\n        warnOnce.shown[text] = 1;\n        err(text);\n      }\n    }\n\n    var asm2wasmImports = {\n      \"f64-rem\": function f64Rem(x, y) {\n        return x % y;\n      },\n      \"debugger\": function _debugger() {\n        debugger;\n      }\n    };\n    var jsCallStartIndex = 1;\n    var functionPointers = new Array(0);\n    var funcWrappers = {};\n\n    function dynCall(sig, ptr, args) {\n      if (args && args.length) {\n        return Module[\"dynCall_\" + sig].apply(null, [ptr].concat(args));\n      } else {\n        return Module[\"dynCall_\" + sig].call(null, ptr);\n      }\n    }\n\n    var GLOBAL_BASE = 1024;\n    var ABORT = false;\n    var EXITSTATUS = 0;\n\n    function assert(condition, text) {\n      if (!condition) {\n        abort(\"Assertion failed: \" + text);\n      }\n    }\n\n    function getCFunc(ident) {\n      var func = Module[\"_\" + ident];\n      assert(func, \"Cannot call unknown function \" + ident + \", make sure it is exported\");\n      return func;\n    }\n\n    var JSfuncs = {\n      \"stackSave\": function stackSave() {\n        _stackSave();\n      },\n      \"stackRestore\": function stackRestore() {\n        _stackRestore();\n      },\n      \"arrayToC\": function arrayToC(arr) {\n        var ret = stackAlloc(arr.length);\n        writeArrayToMemory(arr, ret);\n        return ret;\n      },\n      \"stringToC\": function stringToC(str) {\n        var ret = 0;\n\n        if (str !== null && str !== undefined && str !== 0) {\n          var len = (str.length << 2) + 1;\n          ret = stackAlloc(len);\n          stringToUTF8(str, ret, len);\n        }\n\n        return ret;\n      }\n    };\n    var toC = {\n      \"string\": JSfuncs[\"stringToC\"],\n      \"array\": JSfuncs[\"arrayToC\"]\n    };\n\n    function ccall(ident, returnType, argTypes, args, opts) {\n      function convertReturnValue(ret) {\n        if (returnType === \"string\") return Pointer_stringify(ret);\n        if (returnType === \"boolean\") return Boolean(ret);\n        return ret;\n      }\n\n      var func = getCFunc(ident);\n      var cArgs = [];\n      var stack = 0;\n\n      if (args) {\n        for (var i = 0; i < args.length; i++) {\n          var converter = toC[argTypes[i]];\n\n          if (converter) {\n            if (stack === 0) stack = _stackSave();\n            cArgs[i] = converter(args[i]);\n          } else {\n            cArgs[i] = args[i];\n          }\n        }\n      }\n\n      var ret = func.apply(null, cArgs);\n      ret = convertReturnValue(ret);\n      if (stack !== 0) _stackRestore(stack);\n      return ret;\n    }\n\n    function cwrap(ident, returnType, argTypes, opts) {\n      argTypes = argTypes || [];\n      var numericArgs = argTypes.every(function (type) {\n        return type === \"number\";\n      });\n      var numericRet = returnType !== \"string\";\n\n      if (numericRet && numericArgs && !opts) {\n        return getCFunc(ident);\n      }\n\n      return function () {\n        return ccall(ident, returnType, argTypes, arguments, opts);\n      };\n    }\n\n    function setValue(ptr, value, type, noSafe) {\n      type = type || \"i8\";\n      if (type.charAt(type.length - 1) === \"*\") type = \"i32\";\n\n      switch (type) {\n        case \"i1\":\n          HEAP8[ptr >> 0] = value;\n          break;\n\n        case \"i8\":\n          HEAP8[ptr >> 0] = value;\n          break;\n\n        case \"i16\":\n          HEAP16[ptr >> 1] = value;\n          break;\n\n        case \"i32\":\n          HEAP32[ptr >> 2] = value;\n          break;\n\n        case \"i64\":\n          tempI64 = [value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];\n          break;\n\n        case \"float\":\n          HEAPF32[ptr >> 2] = value;\n          break;\n\n        case \"double\":\n          HEAPF64[ptr >> 3] = value;\n          break;\n\n        default:\n          abort(\"invalid type for setValue: \" + type);\n      }\n    }\n\n    var ALLOC_STATIC = 2;\n    var ALLOC_NONE = 4;\n\n    function Pointer_stringify(ptr, length) {\n      if (length === 0 || !ptr) return \"\";\n      var hasUtf = 0;\n      var t;\n      var i = 0;\n\n      while (1) {\n        t = HEAPU8[ptr + i >> 0];\n        hasUtf |= t;\n        if (t == 0 && !length) break;\n        i++;\n        if (length && i == length) break;\n      }\n\n      if (!length) length = i;\n      var ret = \"\";\n\n      if (hasUtf < 128) {\n        var MAX_CHUNK = 1024;\n        var curr;\n\n        while (length > 0) {\n          curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));\n          ret = ret ? ret + curr : curr;\n          ptr += MAX_CHUNK;\n          length -= MAX_CHUNK;\n        }\n\n        return ret;\n      }\n\n      return UTF8ToString(ptr);\n    }\n\n    var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\n    function UTF8ArrayToString(u8Array, idx) {\n      var endPtr = idx;\n\n      while (u8Array[endPtr]) {\n        ++endPtr;\n      }\n\n      if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {\n        return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));\n      } else {\n        var u0, u1, u2, u3, u4, u5;\n        var str = \"\";\n\n        while (1) {\n          u0 = u8Array[idx++];\n          if (!u0) return str;\n\n          if (!(u0 & 128)) {\n            str += String.fromCharCode(u0);\n            continue;\n          }\n\n          u1 = u8Array[idx++] & 63;\n\n          if ((u0 & 224) == 192) {\n            str += String.fromCharCode((u0 & 31) << 6 | u1);\n            continue;\n          }\n\n          u2 = u8Array[idx++] & 63;\n\n          if ((u0 & 240) == 224) {\n            u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n          } else {\n            u3 = u8Array[idx++] & 63;\n\n            if ((u0 & 248) == 240) {\n              u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u3;\n            } else {\n              u4 = u8Array[idx++] & 63;\n\n              if ((u0 & 252) == 248) {\n                u0 = (u0 & 3) << 24 | u1 << 18 | u2 << 12 | u3 << 6 | u4;\n              } else {\n                u5 = u8Array[idx++] & 63;\n                u0 = (u0 & 1) << 30 | u1 << 24 | u2 << 18 | u3 << 12 | u4 << 6 | u5;\n              }\n            }\n          }\n\n          if (u0 < 65536) {\n            str += String.fromCharCode(u0);\n          } else {\n            var ch = u0 - 65536;\n            str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n          }\n        }\n      }\n    }\n\n    function UTF8ToString(ptr) {\n      return UTF8ArrayToString(HEAPU8, ptr);\n    }\n\n    function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {\n      if (!(maxBytesToWrite > 0)) return 0;\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n\n        if (u >= 55296 && u <= 57343) {\n          var u1 = str.charCodeAt(++i);\n          u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n        }\n\n        if (u <= 127) {\n          if (outIdx >= endIdx) break;\n          outU8Array[outIdx++] = u;\n        } else if (u <= 2047) {\n          if (outIdx + 1 >= endIdx) break;\n          outU8Array[outIdx++] = 192 | u >> 6;\n          outU8Array[outIdx++] = 128 | u & 63;\n        } else if (u <= 65535) {\n          if (outIdx + 2 >= endIdx) break;\n          outU8Array[outIdx++] = 224 | u >> 12;\n          outU8Array[outIdx++] = 128 | u >> 6 & 63;\n          outU8Array[outIdx++] = 128 | u & 63;\n        } else if (u <= 2097151) {\n          if (outIdx + 3 >= endIdx) break;\n          outU8Array[outIdx++] = 240 | u >> 18;\n          outU8Array[outIdx++] = 128 | u >> 12 & 63;\n          outU8Array[outIdx++] = 128 | u >> 6 & 63;\n          outU8Array[outIdx++] = 128 | u & 63;\n        } else if (u <= 67108863) {\n          if (outIdx + 4 >= endIdx) break;\n          outU8Array[outIdx++] = 248 | u >> 24;\n          outU8Array[outIdx++] = 128 | u >> 18 & 63;\n          outU8Array[outIdx++] = 128 | u >> 12 & 63;\n          outU8Array[outIdx++] = 128 | u >> 6 & 63;\n          outU8Array[outIdx++] = 128 | u & 63;\n        } else {\n          if (outIdx + 5 >= endIdx) break;\n          outU8Array[outIdx++] = 252 | u >> 30;\n          outU8Array[outIdx++] = 128 | u >> 24 & 63;\n          outU8Array[outIdx++] = 128 | u >> 18 & 63;\n          outU8Array[outIdx++] = 128 | u >> 12 & 63;\n          outU8Array[outIdx++] = 128 | u >> 6 & 63;\n          outU8Array[outIdx++] = 128 | u & 63;\n        }\n      }\n\n      outU8Array[outIdx] = 0;\n      return outIdx - startIdx;\n    }\n\n    function stringToUTF8(str, outPtr, maxBytesToWrite) {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    }\n\n    function lengthBytesUTF8(str) {\n      var len = 0;\n\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n\n        if (u <= 127) {\n          ++len;\n        } else if (u <= 2047) {\n          len += 2;\n        } else if (u <= 65535) {\n          len += 3;\n        } else if (u <= 2097151) {\n          len += 4;\n        } else if (u <= 67108863) {\n          len += 5;\n        } else {\n          len += 6;\n        }\n      }\n\n      return len;\n    }\n\n    var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n\n    function demangle(func) {\n      return func;\n    }\n\n    function demangleAll(text) {\n      var regex = /__Z[\\w\\d_]+/g;\n      return text.replace(regex, function (x) {\n        var y = demangle(x);\n        return x === y ? x : x + \" [\" + y + \"]\";\n      });\n    }\n\n    function jsStackTrace() {\n      var err = new Error();\n\n      if (!err.stack) {\n        try {\n          throw new Error(0);\n        } catch (e) {\n          err = e;\n        }\n\n        if (!err.stack) {\n          return \"(no stack trace available)\";\n        }\n      }\n\n      return err.stack.toString();\n    }\n\n    var WASM_PAGE_SIZE = 65536;\n    var ASMJS_PAGE_SIZE = 16777216;\n\n    function alignUp(x, multiple) {\n      if (x % multiple > 0) {\n        x += multiple - x % multiple;\n      }\n\n      return x;\n    }\n\n    var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n\n    function updateGlobalBuffer(buf) {\n      Module[\"buffer\"] = buffer = buf;\n    }\n\n    function updateGlobalBufferViews() {\n      Module[\"HEAP8\"] = HEAP8 = new Int8Array(buffer);\n      Module[\"HEAP16\"] = HEAP16 = new Int16Array(buffer);\n      Module[\"HEAP32\"] = HEAP32 = new Int32Array(buffer);\n      Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buffer);\n      Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buffer);\n      Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buffer);\n      Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buffer);\n      Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buffer);\n    }\n\n    var STATIC_BASE, STATICTOP, staticSealed;\n    var STACK_BASE, STACKTOP, STACK_MAX;\n    var DYNAMIC_BASE, DYNAMICTOP_PTR;\n    STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;\n    staticSealed = false;\n\n    function abortOnCannotGrowMemory() {\n      abort(\"Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value \" + TOTAL_MEMORY + \", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 \");\n    }\n\n    function enlargeMemory() {\n      abortOnCannotGrowMemory();\n    }\n\n    var TOTAL_STACK = Module[\"TOTAL_STACK\"] || 5242880;\n    var TOTAL_MEMORY = Module[\"TOTAL_MEMORY\"] || 16777216;\n    if (TOTAL_MEMORY < TOTAL_STACK) err(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \" + TOTAL_MEMORY + \"! (TOTAL_STACK=\" + TOTAL_STACK + \")\");\n\n    if (Module[\"buffer\"]) {\n      buffer = Module[\"buffer\"];\n    } else {\n      if (typeof WebAssembly === \"object\" && typeof WebAssembly.Memory === \"function\") {\n        Module[\"wasmMemory\"] = new WebAssembly.Memory({\n          \"initial\": TOTAL_MEMORY / WASM_PAGE_SIZE,\n          \"maximum\": TOTAL_MEMORY / WASM_PAGE_SIZE\n        });\n        buffer = Module[\"wasmMemory\"].buffer;\n      } else {\n        buffer = new ArrayBuffer(TOTAL_MEMORY);\n      }\n\n      Module[\"buffer\"] = buffer;\n    }\n\n    updateGlobalBufferViews();\n\n    function getTotalMemory() {\n      return TOTAL_MEMORY;\n    }\n\n    function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        var callback = callbacks.shift();\n\n        if (typeof callback == \"function\") {\n          callback();\n          continue;\n        }\n\n        var func = callback.func;\n\n        if (typeof func === \"number\") {\n          if (callback.arg === undefined) {\n            Module[\"dynCall_v\"](func);\n          } else {\n            Module[\"dynCall_vi\"](func, callback.arg);\n          }\n        } else {\n          func(callback.arg === undefined ? null : callback.arg);\n        }\n      }\n    }\n\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATMAIN__ = [];\n    var __ATEXIT__ = [];\n    var __ATPOSTRUN__ = [];\n    var runtimeInitialized = false;\n    var runtimeExited = false;\n\n    function preRun() {\n      if (Module[\"preRun\"]) {\n        if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [Module[\"preRun\"]];\n\n        while (Module[\"preRun\"].length) {\n          addOnPreRun(Module[\"preRun\"].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n\n    function ensureInitRuntime() {\n      if (runtimeInitialized) return;\n      runtimeInitialized = true;\n      callRuntimeCallbacks(__ATINIT__);\n    }\n\n    function preMain() {\n      callRuntimeCallbacks(__ATMAIN__);\n    }\n\n    function exitRuntime() {\n      callRuntimeCallbacks(__ATEXIT__);\n      runtimeExited = true;\n    }\n\n    function postRun() {\n      if (Module[\"postRun\"]) {\n        if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [Module[\"postRun\"]];\n\n        while (Module[\"postRun\"].length) {\n          addOnPostRun(Module[\"postRun\"].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n\n    function writeArrayToMemory(array, buffer) {\n      HEAP8.set(array, buffer);\n    }\n\n    function writeAsciiToMemory(str, buffer, dontAddNull) {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n      }\n\n      if (!dontAddNull) HEAP8[buffer >> 0] = 0;\n    }\n\n    var Math_abs = Math.abs;\n    var Math_ceil = Math.ceil;\n    var Math_floor = Math.floor;\n    var Math_min = Math.min;\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n\n    function addRunDependency(id) {\n      runDependencies++;\n\n      if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n      }\n    }\n\n    function removeRunDependency(id) {\n      runDependencies--;\n\n      if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n      }\n\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n\n    Module[\"preloadedImages\"] = {};\n    Module[\"preloadedAudios\"] = {};\n    var dataURIPrefix = \"data:application/octet-stream;base64,\";\n\n    function isDataURI(filename) {\n      return String.prototype.startsWith ? filename.startsWith(dataURIPrefix) : filename.indexOf(dataURIPrefix) === 0;\n    }\n\n    function integrateWasmJS() {\n      var wasmTextFile = \"pv_porcupine.wast\";\n      var wasmBinaryFile = \"pv_porcupine.wasm\";\n      var asmjsCodeFile = \"pv_porcupine.temp.asm.js\";\n\n      if (!isDataURI(wasmTextFile)) {\n        wasmTextFile = locateFile(wasmTextFile);\n      }\n\n      if (!isDataURI(wasmBinaryFile)) {\n        wasmBinaryFile = locateFile(wasmBinaryFile);\n      }\n\n      if (!isDataURI(asmjsCodeFile)) {\n        asmjsCodeFile = locateFile(asmjsCodeFile);\n      }\n\n      var wasmPageSize = 64 * 1024;\n      var info = {\n        \"global\": null,\n        \"env\": null,\n        \"asm2wasm\": asm2wasmImports,\n        \"parent\": Module\n      };\n      var exports = null;\n\n      function mergeMemory(newBuffer) {\n        var oldBuffer = Module[\"buffer\"];\n\n        if (newBuffer.byteLength < oldBuffer.byteLength) {\n          err(\"the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here\");\n        }\n\n        var oldView = new Int8Array(oldBuffer);\n        var newView = new Int8Array(newBuffer);\n        newView.set(oldView);\n        updateGlobalBuffer(newBuffer);\n        updateGlobalBufferViews();\n      }\n\n      function fixImports(imports) {\n        return imports;\n      }\n\n      function getBinary() {\n        try {\n          if (Module[\"wasmBinary\"]) {\n            return new Uint8Array(Module[\"wasmBinary\"]);\n          }\n\n          if (Module[\"readBinary\"]) {\n            return Module[\"readBinary\"](wasmBinaryFile);\n          } else {\n            throw \"both async and sync fetching of the wasm failed\";\n          }\n        } catch (err) {\n          abort(err);\n        }\n      }\n\n      function getBinaryPromise() {\n        if (!Module[\"wasmBinary\"] && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === \"function\") {\n          return fetch(wasmBinaryFile, {\n            credentials: \"same-origin\"\n          }).then(function (response) {\n            if (!response[\"ok\"]) {\n              throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n            }\n\n            return response[\"arrayBuffer\"]();\n          }).catch(function () {\n            return getBinary();\n          });\n        }\n\n        return new Promise(function (resolve, reject) {\n          resolve(getBinary());\n        });\n      }\n\n      function doNativeWasm(global, env, providedBuffer) {\n        if (typeof WebAssembly !== \"object\") {\n          err(\"no native wasm support detected\");\n          return false;\n        }\n\n        if (!(Module[\"wasmMemory\"] instanceof WebAssembly.Memory)) {\n          err(\"no native wasm Memory in use\");\n          return false;\n        }\n\n        env[\"memory\"] = Module[\"wasmMemory\"];\n        info[\"global\"] = {\n          \"NaN\": NaN,\n          \"Infinity\": Infinity\n        };\n        info[\"global.Math\"] = Math;\n        info[\"env\"] = env;\n\n        function receiveInstance(instance, module) {\n          exports = instance.exports;\n          if (exports.memory) mergeMemory(exports.memory);\n          Module[\"asm\"] = exports;\n          Module[\"usingWasm\"] = true;\n          removeRunDependency(\"wasm-instantiate\");\n        }\n\n        addRunDependency(\"wasm-instantiate\");\n\n        if (Module[\"instantiateWasm\"]) {\n          try {\n            return Module[\"instantiateWasm\"](info, receiveInstance);\n          } catch (e) {\n            err(\"Module.instantiateWasm callback failed with error: \" + e);\n            return false;\n          }\n        }\n\n        function receiveInstantiatedSource(output) {\n          receiveInstance(output[\"instance\"], output[\"module\"]);\n        }\n\n        function instantiateArrayBuffer(receiver) {\n          getBinaryPromise().then(function (binary) {\n            return WebAssembly.instantiate(binary, info);\n          }).then(receiver).catch(function (reason) {\n            err(\"failed to asynchronously prepare wasm: \" + reason);\n            abort(reason);\n          });\n        }\n\n        if (!Module[\"wasmBinary\"] && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && typeof fetch === \"function\") {\n          WebAssembly.instantiateStreaming(fetch(wasmBinaryFile, {\n            credentials: \"same-origin\"\n          }), info).then(receiveInstantiatedSource).catch(function (reason) {\n            err(\"wasm streaming compile failed: \" + reason);\n            err(\"falling back to ArrayBuffer instantiation\");\n            instantiateArrayBuffer(receiveInstantiatedSource);\n          });\n        } else {\n          instantiateArrayBuffer(receiveInstantiatedSource);\n        }\n\n        return {};\n      }\n\n      Module[\"asmPreload\"] = Module[\"asm\"];\n      var asmjsReallocBuffer = Module[\"reallocBuffer\"];\n\n      var wasmReallocBuffer = function wasmReallocBuffer(size) {\n        var PAGE_MULTIPLE = Module[\"usingWasm\"] ? WASM_PAGE_SIZE : ASMJS_PAGE_SIZE;\n        size = alignUp(size, PAGE_MULTIPLE);\n        var old = Module[\"buffer\"];\n        var oldSize = old.byteLength;\n\n        if (Module[\"usingWasm\"]) {\n          try {\n            var result = Module[\"wasmMemory\"].grow((size - oldSize) / wasmPageSize);\n\n            if (result !== (-1 | 0)) {\n              return Module[\"buffer\"] = Module[\"wasmMemory\"].buffer;\n            } else {\n              return null;\n            }\n          } catch (e) {\n            return null;\n          }\n        }\n      };\n\n      Module[\"reallocBuffer\"] = function (size) {\n        if (finalMethod === \"asmjs\") {\n          return asmjsReallocBuffer(size);\n        } else {\n          return wasmReallocBuffer(size);\n        }\n      };\n\n      var finalMethod = \"\";\n\n      Module[\"asm\"] = function (global, env, providedBuffer) {\n        env = fixImports(env);\n\n        if (!env[\"table\"]) {\n          var TABLE_SIZE = Module[\"wasmTableSize\"];\n          if (TABLE_SIZE === undefined) TABLE_SIZE = 1024;\n          var MAX_TABLE_SIZE = Module[\"wasmMaxTableSize\"];\n\n          if (typeof WebAssembly === \"object\" && typeof WebAssembly.Table === \"function\") {\n            if (MAX_TABLE_SIZE !== undefined) {\n              env[\"table\"] = new WebAssembly.Table({\n                \"initial\": TABLE_SIZE,\n                \"maximum\": MAX_TABLE_SIZE,\n                \"element\": \"anyfunc\"\n              });\n            } else {\n              env[\"table\"] = new WebAssembly.Table({\n                \"initial\": TABLE_SIZE,\n                element: \"anyfunc\"\n              });\n            }\n          } else {\n            env[\"table\"] = new Array(TABLE_SIZE);\n          }\n\n          Module[\"wasmTable\"] = env[\"table\"];\n        }\n\n        if (!env[\"memoryBase\"]) {\n          env[\"memoryBase\"] = Module[\"STATIC_BASE\"];\n        }\n\n        if (!env[\"tableBase\"]) {\n          env[\"tableBase\"] = 0;\n        }\n\n        var exports;\n        exports = doNativeWasm(global, env, providedBuffer);\n        assert(exports, \"no binaryen method succeeded.\");\n        return exports;\n      };\n    }\n\n    integrateWasmJS();\n    STATIC_BASE = GLOBAL_BASE;\n    STATICTOP = STATIC_BASE + 1415008;\n\n    __ATINIT__.push();\n\n    var STATIC_BUMP = 1415008;\n    Module[\"STATIC_BASE\"] = STATIC_BASE;\n    Module[\"STATIC_BUMP\"] = STATIC_BUMP;\n    var tempDoublePtr = STATICTOP;\n    STATICTOP += 16;\n    var SYSCALLS = {\n      varargs: 0,\n      get: function get(varargs) {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n        return ret;\n      },\n      getStr: function getStr() {\n        var ret = Pointer_stringify(SYSCALLS.get());\n        return ret;\n      },\n      get64: function get64() {\n        var low = SYSCALLS.get(),\n            high = SYSCALLS.get();\n        if (low >= 0) assert(high === 0);else assert(high === -1);\n        return low;\n      },\n      getZero: function getZero() {\n        assert(SYSCALLS.get() === 0);\n      }\n    };\n\n    function ___syscall140(which, varargs) {\n      SYSCALLS.varargs = varargs;\n\n      try {\n        var stream = SYSCALLS.getStreamFromFD(),\n            offset_high = SYSCALLS.get(),\n            offset_low = SYSCALLS.get(),\n            result = SYSCALLS.get(),\n            whence = SYSCALLS.get();\n        var offset = offset_low;\n        FS.llseek(stream, offset, whence);\n        HEAP32[result >> 2] = stream.position;\n        if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function flush_NO_FILESYSTEM() {\n      var fflush = Module[\"_fflush\"];\n      if (fflush) fflush(0);\n      var printChar = ___syscall146.printChar;\n      if (!printChar) return;\n      var buffers = ___syscall146.buffers;\n      if (buffers[1].length) printChar(1, 10);\n      if (buffers[2].length) printChar(2, 10);\n    }\n\n    function ___syscall146(which, varargs) {\n      SYSCALLS.varargs = varargs;\n\n      try {\n        var stream = SYSCALLS.get(),\n            iov = SYSCALLS.get(),\n            iovcnt = SYSCALLS.get();\n        var ret = 0;\n\n        if (!___syscall146.buffers) {\n          ___syscall146.buffers = [null, [], []];\n\n          ___syscall146.printChar = function (stream, curr) {\n            var buffer = ___syscall146.buffers[stream];\n            assert(buffer);\n\n            if (curr === 0 || curr === 10) {\n              (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n              buffer.length = 0;\n            } else {\n              buffer.push(curr);\n            }\n          };\n        }\n\n        for (var i = 0; i < iovcnt; i++) {\n          var ptr = HEAP32[iov + i * 8 >> 2];\n          var len = HEAP32[iov + (i * 8 + 4) >> 2];\n\n          for (var j = 0; j < len; j++) {\n            ___syscall146.printChar(stream, HEAPU8[ptr + j]);\n          }\n\n          ret += len;\n        }\n\n        return ret;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___syscall54(which, varargs) {\n      SYSCALLS.varargs = varargs;\n\n      try {\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function ___syscall6(which, varargs) {\n      SYSCALLS.varargs = varargs;\n\n      try {\n        var stream = SYSCALLS.getStreamFromFD();\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError)) abort(e);\n        return -e.errno;\n      }\n    }\n\n    function _llvm_stackrestore(p) {\n      var self = _llvm_stacksave;\n      var ret = self.LLVM_SAVEDSTACKS[p];\n      self.LLVM_SAVEDSTACKS.splice(p, 1);\n\n      _stackRestore(ret);\n    }\n\n    function _llvm_stacksave() {\n      var self = _llvm_stacksave;\n\n      if (!self.LLVM_SAVEDSTACKS) {\n        self.LLVM_SAVEDSTACKS = [];\n      }\n\n      self.LLVM_SAVEDSTACKS.push(_stackSave());\n      return self.LLVM_SAVEDSTACKS.length - 1;\n    }\n\n    function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.set(HEAPU8.subarray(src, src + num), dest);\n      return dest;\n    }\n\n    function ___setErrNo(value) {\n      if (Module[\"___errno_location\"]) HEAP32[Module[\"___errno_location\"]() >> 2] = value;\n      return value;\n    }\n\n    function _time(ptr) {\n      var ret = Date.now() / 1e3 | 0;\n\n      if (ptr) {\n        HEAP32[ptr >> 2] = ret;\n      }\n\n      return ret;\n    }\n\n    DYNAMICTOP_PTR = staticAlloc(4);\n    STACK_BASE = STACKTOP = alignMemory(STATICTOP);\n    STACK_MAX = STACK_BASE + TOTAL_STACK;\n    DYNAMIC_BASE = alignMemory(STACK_MAX);\n    HEAP32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;\n    staticSealed = true;\n    var ASSERTIONS = false;\n    Module[\"wasmTableSize\"] = 6;\n    Module[\"wasmMaxTableSize\"] = 6;\n\n    function invoke_ii(index, a1) {\n      var sp = _stackSave();\n\n      try {\n        return Module[\"dynCall_ii\"](index, a1);\n      } catch (e) {\n        _stackRestore(sp);\n\n        if (typeof e !== \"number\" && e !== \"longjmp\") throw e;\n        Module[\"setThrew\"](1, 0);\n      }\n    }\n\n    function invoke_iiii(index, a1, a2, a3) {\n      var sp = _stackSave();\n\n      try {\n        return Module[\"dynCall_iiii\"](index, a1, a2, a3);\n      } catch (e) {\n        _stackRestore(sp);\n\n        if (typeof e !== \"number\" && e !== \"longjmp\") throw e;\n        Module[\"setThrew\"](1, 0);\n      }\n    }\n\n    Module.asmGlobalArg = {};\n    Module.asmLibraryArg = {\n      \"abort\": abort,\n      \"assert\": assert,\n      \"enlargeMemory\": enlargeMemory,\n      \"getTotalMemory\": getTotalMemory,\n      \"abortOnCannotGrowMemory\": abortOnCannotGrowMemory,\n      \"invoke_ii\": invoke_ii,\n      \"invoke_iiii\": invoke_iiii,\n      \"___setErrNo\": ___setErrNo,\n      \"___syscall140\": ___syscall140,\n      \"___syscall146\": ___syscall146,\n      \"___syscall54\": ___syscall54,\n      \"___syscall6\": ___syscall6,\n      \"_emscripten_memcpy_big\": _emscripten_memcpy_big,\n      \"_llvm_stackrestore\": _llvm_stackrestore,\n      \"_llvm_stacksave\": _llvm_stacksave,\n      \"_time\": _time,\n      \"flush_NO_FILESYSTEM\": flush_NO_FILESYSTEM,\n      \"DYNAMICTOP_PTR\": DYNAMICTOP_PTR,\n      \"tempDoublePtr\": tempDoublePtr,\n      \"STACKTOP\": STACKTOP,\n      \"STACK_MAX\": STACK_MAX\n    };\n    var asm = Module[\"asm\"](Module.asmGlobalArg, Module.asmLibraryArg, buffer);\n    Module[\"asm\"] = asm;\n\n    var ___errno_location = Module[\"___errno_location\"] = function () {\n      return Module[\"asm\"][\"___errno_location\"].apply(null, arguments);\n    };\n\n    var _free = Module[\"_free\"] = function () {\n      return Module[\"asm\"][\"_free\"].apply(null, arguments);\n    };\n\n    var _llvm_bswap_i32 = Module[\"_llvm_bswap_i32\"] = function () {\n      return Module[\"asm\"][\"_llvm_bswap_i32\"].apply(null, arguments);\n    };\n\n    var _malloc = Module[\"_malloc\"] = function () {\n      return Module[\"asm\"][\"_malloc\"].apply(null, arguments);\n    };\n\n    var _memcpy = Module[\"_memcpy\"] = function () {\n      return Module[\"asm\"][\"_memcpy\"].apply(null, arguments);\n    };\n\n    var _memset = Module[\"_memset\"] = function () {\n      return Module[\"asm\"][\"_memset\"].apply(null, arguments);\n    };\n\n    var _pv_porcupine_wasm_delete = Module[\"_pv_porcupine_wasm_delete\"] = function () {\n      return Module[\"asm\"][\"_pv_porcupine_wasm_delete\"].apply(null, arguments);\n    };\n\n    var _pv_porcupine_wasm_frame_length = Module[\"_pv_porcupine_wasm_frame_length\"] = function () {\n      return Module[\"asm\"][\"_pv_porcupine_wasm_frame_length\"].apply(null, arguments);\n    };\n\n    var _pv_porcupine_wasm_init = Module[\"_pv_porcupine_wasm_init\"] = function () {\n      return Module[\"asm\"][\"_pv_porcupine_wasm_init\"].apply(null, arguments);\n    };\n\n    var _pv_porcupine_wasm_process = Module[\"_pv_porcupine_wasm_process\"] = function () {\n      return Module[\"asm\"][\"_pv_porcupine_wasm_process\"].apply(null, arguments);\n    };\n\n    var _pv_porcupine_wasm_version = Module[\"_pv_porcupine_wasm_version\"] = function () {\n      return Module[\"asm\"][\"_pv_porcupine_wasm_version\"].apply(null, arguments);\n    };\n\n    var _pv_wasm_sample_rate = Module[\"_pv_wasm_sample_rate\"] = function () {\n      return Module[\"asm\"][\"_pv_wasm_sample_rate\"].apply(null, arguments);\n    };\n\n    var _sbrk = Module[\"_sbrk\"] = function () {\n      return Module[\"asm\"][\"_sbrk\"].apply(null, arguments);\n    };\n\n    var establishStackSpace = Module[\"establishStackSpace\"] = function () {\n      return Module[\"asm\"][\"establishStackSpace\"].apply(null, arguments);\n    };\n\n    var getTempRet0 = Module[\"getTempRet0\"] = function () {\n      return Module[\"asm\"][\"getTempRet0\"].apply(null, arguments);\n    };\n\n    var runPostSets = Module[\"runPostSets\"] = function () {\n      return Module[\"asm\"][\"runPostSets\"].apply(null, arguments);\n    };\n\n    var setTempRet0 = Module[\"setTempRet0\"] = function () {\n      return Module[\"asm\"][\"setTempRet0\"].apply(null, arguments);\n    };\n\n    var setThrew = Module[\"setThrew\"] = function () {\n      return Module[\"asm\"][\"setThrew\"].apply(null, arguments);\n    };\n\n    var stackAlloc = Module[\"stackAlloc\"] = function () {\n      return Module[\"asm\"][\"stackAlloc\"].apply(null, arguments);\n    };\n\n    var _stackRestore = Module[\"stackRestore\"] = function () {\n      return Module[\"asm\"][\"stackRestore\"].apply(null, arguments);\n    };\n\n    var _stackSave = Module[\"stackSave\"] = function () {\n      return Module[\"asm\"][\"stackSave\"].apply(null, arguments);\n    };\n\n    var dynCall_ii = Module[\"dynCall_ii\"] = function () {\n      return Module[\"asm\"][\"dynCall_ii\"].apply(null, arguments);\n    };\n\n    var dynCall_iiii = Module[\"dynCall_iiii\"] = function () {\n      return Module[\"asm\"][\"dynCall_iiii\"].apply(null, arguments);\n    };\n\n    Module[\"asm\"] = asm;\n    Module[\"cwrap\"] = cwrap;\n\n    Module[\"then\"] = function (func) {\n      if (Module[\"calledRun\"]) {\n        func(Module);\n      } else {\n        var old = Module[\"onRuntimeInitialized\"];\n\n        Module[\"onRuntimeInitialized\"] = function () {\n          if (old) old();\n          func(Module);\n        };\n      }\n\n      return Module;\n    };\n\n    function ExitStatus(status) {\n      this.name = \"ExitStatus\";\n      this.message = \"Program terminated with exit(\" + status + \")\";\n      this.status = status;\n    }\n\n    ExitStatus.prototype = new Error();\n    ExitStatus.prototype.constructor = ExitStatus;\n    var initialStackTop;\n\n    dependenciesFulfilled = function runCaller() {\n      if (!Module[\"calledRun\"]) run();\n      if (!Module[\"calledRun\"]) dependenciesFulfilled = runCaller;\n    };\n\n    function run(args) {\n      args = args || Module[\"arguments\"];\n\n      if (runDependencies > 0) {\n        return;\n      }\n\n      preRun();\n      if (runDependencies > 0) return;\n      if (Module[\"calledRun\"]) return;\n\n      function doRun() {\n        if (Module[\"calledRun\"]) return;\n        Module[\"calledRun\"] = true;\n        if (ABORT) return;\n        ensureInitRuntime();\n        preMain();\n        if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n        postRun();\n      }\n\n      if (Module[\"setStatus\"]) {\n        Module[\"setStatus\"](\"Running...\");\n        setTimeout(function () {\n          setTimeout(function () {\n            Module[\"setStatus\"](\"\");\n          }, 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n\n    Module[\"run\"] = run;\n\n    function abort(what) {\n      if (Module[\"onAbort\"]) {\n        Module[\"onAbort\"](what);\n      }\n\n      if (what !== undefined) {\n        out(what);\n        err(what);\n        what = JSON.stringify(what);\n      } else {\n        what = \"\";\n      }\n\n      ABORT = true;\n      EXITSTATUS = 1;\n      throw \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n    }\n\n    Module[\"abort\"] = abort;\n\n    if (Module[\"preInit\"]) {\n      if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [Module[\"preInit\"]];\n\n      while (Module[\"preInit\"].length > 0) {\n        Module[\"preInit\"].pop()();\n      }\n    }\n\n    Module[\"noExitRuntime\"] = true;\n    run();\n    return PorcupineModule;\n  };\n}(); // if (typeof exports === 'object' && typeof module === 'object')\n// \tmodule.exports = PorcupineModule;\n// else if (typeof define === 'function' && define['amd'])\n// \tdefine([], function () {\n// \t\treturn PorcupineModule;\n// \t});\n// else if (typeof exports === 'object')\n// \texports[\"PorcupineModule\"] = PorcupineModule;\n//\n\n\nmodule.exports = PorcupineModule;","var PicovoiceAudioManager = function PicovoiceAudioManager() {\n  if (typeof navigator === 'undefined') {\n    return;\n  }\n\n  navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n  var inputBufferLength = 2048;\n  var inputSampleRate;\n  var engine;\n  var processCallback;\n  var isProcessing = false;\n  var inputAudioBuffer = [];\n\n  var process = function process(inputAudioFrame) {\n    if (!isProcessing) {\n      return;\n    }\n\n    for (var i = 0; i < inputAudioFrame.length; i++) {\n      inputAudioBuffer.push(inputAudioFrame[i] * 32767);\n    }\n\n    while (inputAudioBuffer.length * engine.sampleRate / inputSampleRate > engine.frameLength) {\n      var result = new Int16Array(engine.frameLength);\n      var bin = 0;\n      var num = 0;\n      var indexIn = 0;\n      var indexOut = 0;\n\n      while (indexIn < engine.frameLength) {\n        bin = 0;\n        num = 0;\n\n        while (indexOut < Math.min(inputAudioBuffer.length, (indexIn + 1) * inputSampleRate / engine.sampleRate)) {\n          bin += inputAudioBuffer[indexOut];\n          num += 1;\n          indexOut++;\n        }\n\n        result[indexIn] = bin / num;\n        indexIn++;\n      }\n\n      processCallback(engine.process(result));\n      inputAudioBuffer = inputAudioBuffer.slice(indexOut);\n    }\n  };\n\n  var getUserMediaSuccessCallback = function getUserMediaSuccessCallback(stream) {\n    var audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    var audioSource = audioContext.createMediaStreamSource(stream);\n    inputSampleRate = audioSource.context.sampleRate;\n    var engineNode = audioSource.context.createScriptProcessor(inputBufferLength, 1, 1);\n\n    engineNode.onaudioprocess = function (ev) {\n      process(ev.inputBuffer.getChannelData(0));\n    };\n\n    audioSource.connect(engineNode);\n    engineNode.connect(audioSource.context.destination);\n  };\n\n  this.start = function (picovoiceEngine, picovoiceProcessCallback, errorCallback) {\n    if (!picovoiceEngine) {\n      return;\n    }\n\n    if (!navigator.getUserMedia) {\n      errorCallback(\"this browser does not support audio capture\");\n    }\n\n    navigator.getUserMedia({\n      audio: true\n    }, getUserMediaSuccessCallback, errorCallback);\n    engine = picovoiceEngine;\n    processCallback = picovoiceProcessCallback;\n    isProcessing = true;\n  };\n\n  this.stop = function () {\n    isProcessing = false;\n    inputAudioBuffer = [];\n  };\n};\n\nmodule.exports = PicovoiceAudioManager;","import React, {Component} from 'react';\n\nimport bumblebee from 'bumblebee-hotword';\n\nclass BumbleBeeApp extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\t\n\t\tthis.state = {\n\t\t\thotwords: ['bumblebee',\n\t\t\t\t'porcupine',\n\t\t\t\t'dragonfly',\n\t\t\t\t'caterpillar',\n\t\t\t\t'grasshopper',\n\t\t\t\t'terminator',\n\t\t\t\t'christina',\n\t\t\t\t'francesca'],\n\t\t\tbumblebee_started: false,\n\t\t\tspokenHotwords: [],\n\t\t\tselectedHotword: 'bumblebee',\n\t\t\tsensivitiyChanged: false,\n\t\t\tsensitivity: 0.5\n\t\t};\n\t\t\n\t\tthis.sound = new Audio('transform.wav');\n\t}\n\t\n\tcomponentDidMount() {\n\t\tbumblebee.setHotword(this.state.selectedHotword);\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t\n\t\t\t\tHotword: <select value={this.state.selectedHotword} onChange={e => this.changeHotword(e)}>\n\t\t\t\t\t{ this.renderHotwordOptions() }\n\t\t\t\t</select>\n\t\t\t\t\n\t\t\t\t<br/>\n\t\t\t\t\n\t\t\t\tSensitivity: <select value={this.state.sensitivity} onChange={e => this.changeSensitivity(e)}>\n\t\t\t\t\t{ this.renderSensitivities() }\n\t\t\t\t</select>\n\t\t\t\t\n\t\t\t\t<br/>\n\t\t\t\t\n\t\t\t\t<button onClick={e => this.toggleHotword()}>\n\t\t\t\t\t{!this.state.bumblebee_started ? 'Start' : 'Stop'}\n\t\t\t\t</button>\n\t\t\t\t\n\t\t\t\t{this.renderSay()}\n\t\t\t\t\n\t\t\t\t{this.renderBumblebees()}\n\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n\t\n\trenderSay() {\n\t\tif (!this.state.bumblebee_started) return;\n\t\tif (this.state.selectedHotword) return (<h3>Say \"{this.state.selectedHotword}\":</h3>);\n\t\telse return (<h4>Say any of the following: {this.state.hotwords.join(', ')}:</h4>);\n\t}\n\t\n\trenderHotwordOptions() {\n\t\tlet h = this.state.hotwords.map((hotword,i) => {\n\t\t\treturn (<option key={i} value={hotword}>{hotword}</option>);\n\t\t});\n\t\th.unshift(<option key={'null'} value={''}>* Any *</option>);\n\t\treturn h;\n\t}\n\t\n\trenderSensitivities(e) {\n\t\tlet s = [];\n\t\tfor (let i=0;i<=10;i++) {\n\t\t\tlet n = i / 10; //Math.round(i / 10) / 10:\n\t\t\tlet p = i * 10; //Math.round(i / 10) / 10:\n\t\t\ts.push(<option key={i} value={n}>{p}%</option>);\n\t\t}\n\t\treturn s;\n\t}\n\t\n\tchangeSensitivity(e) {\n\t\tlet sensitivity = e.target.options[e.target.selectedIndex].value;\n\t\t\n\t\tif (this.state.sensivitiyChanged) {\n\t\t\talert('Sensitivity can only be set before .start(), reload and try again');\n\t\t}\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\tsensitivity\n\t\t\t});\n\t\t\tbumblebee.sensitivity(sensitivity);\n\t\t}\n\t}\n\t\n\tchangeHotword(e) {\n\t\tlet selectedHotword = e.target.options[e.target.selectedIndex].value;\n\t\tbumblebee.setHotword(selectedHotword);\n\t\tthis.setState({\n\t\t\tselectedHotword,\n\t\t\tspokenHotwords: []\n\t\t});\n\t}\n\t\n\ttoggleHotword() {\n\t\tlet hotword = this.state.selectedHotword;\n\t\tif (!this.state.bumblebee_started) {\n\t\t\tconsole.log('starting', hotword);\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tbumblebee_started: true,\n\t\t\t\tspokenHotwords: [],\n\t\t\t\tsensivitiyChanged: true\n\t\t\t});\n\t\t\t\n\t\t\tbumblebee.start((word) => {\n\t\t\t\tthis.recognizeHotword(word);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tbumblebee.stop();\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tbumblebee_started: false,\n\t\t\t\tspokenHotwords: []\n\t\t\t});\n\t\t}\n\t}\n\t\n\trecognizeHotword(word) {\n\t\tif (word === this.state.selectedHotword || !this.state.selectedHotword) {\n\t\t\tthis.sound.play();\n\t\t\t\n\t\t\tconst spokenHotwords = this.state.spokenHotwords;\n\t\t\tspokenHotwords.push(word);\n\t\t\t\n\t\t\tconsole.log('recognized hotword', word);\n\t\t\tthis.setState({\n\t\t\t\tspokenHotwords\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tconsole.log('did not recognize', word);\n\t\t}\n\t}\n\t\n\trenderBumblebees() {\n\t\tlet b = this.state.spokenHotwords.map((word,i) => {\n\t\t\treturn (<li key={i}>{word}</li>);\n\t\t});\n\t\treturn (<ul>\n\t\t\t{b}\n\t\t</ul>);\n\t}\n\t\n}\n\nexport default BumbleBeeApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport BumbleBeeApp from './BumbleBeeApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BumbleBeeApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}