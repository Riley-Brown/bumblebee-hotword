{"version":3,"sources":["../../../lib/bumblebee.js","../../../lib/porcupine_manager.js","../../../lib/web-voice-processor.js","../../../lib/spectrum-analyser.js","../../../hotwords/bumblebee.js","BumbleBeeBasicApp.js","serviceWorker.js","index.js"],"names":["EventEmitter","require","PorcupineManager","webVoiceProcessor","SpectrumAnalyser","BumbleBee","hotword","hotwords","setMicVolume","setMuted","setSensitivity","setWorkersPath","setVoiceProcessor","_detectionCallback","detectionCallback","bind","_errorCallback","errorCallback","_audioProcessCallback","audioProcessCallback","_audioAnalyserCallback","audioAnalyserCallback","proc","this","name","data","sensitivity","defaultSensitivity","w","Object","keys","indexOf","Error","s","porcupineManager","stop","started","path","webWorkersPath","keyword","console","log","emit","e","sampleRate","audioAnalyser","gainNode","keywordIDs","sensitivities","id","h","push","start","Float32Array","_gain","muted","gain","value","vol","module","exports","porcupineWorkerScript","downsamplingScript","porcupineWorker","volume","audioContextCallback","Worker","postMessage","command","onmessage","processFrame","frame","inputFrame","downsampler","audioProcessor","audioContext","audioSource","audioStream","isRecording","engines","downsamplerScript","navigator","mediaDevices","getUserMedia","audio","then","stream","window","AudioContext","webkitAudioContext","createMediaStreamSource","createGain","connect","createScriptProcessor","onaudioprocess","inputBuffer","getChannelData","destination","context","inputSampleRate","forEach","engine","createAnalyser","catch","disconnect","getTracks","close","SpectrumAnalyzer","analyser","canvas","drawing","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","ctx","getContext","setColors","lineWidth","_draw","draw","linecolor","bgcolor","strokeStyle","bgColor","getByteTimeDomainData","fillStyle","fillRect","width","height","clearRect","font","fillText","beginPath","sliceWidth","x","i","y","moveTo","lineTo","stroke","requestAnimationFrame","bumblebee","addHotword","setHotword","BumbleBeeBasicApp","state","words","sound","Audio","on","play","setState","className","onClick","renderStarted","map","word","key","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"mLAAMA,EAAeC,EAAQ,IACvBC,EAAmBD,EAAQ,IAC3BE,EAAoBF,EAAQ,IAC5BG,EAAmBH,EAAQ,IAE3BI,E,yBACL,aAAc,wBACb,2BACKC,QAAU,KACf,EAAKC,SAAW,GAChB,EAAKC,aAAa,GAClB,EAAKC,UAAS,GACd,EAAKC,eAAe,IACpB,EAAKC,eAAe,KACpB,EAAKC,kBAAkBT,GACvB,EAAKU,mBAAqB,EAAKC,kBAAkBC,KAAvB,MAC1B,EAAKC,eAAiB,EAAKC,cAAcF,KAAnB,MACtB,EAAKG,sBAAwB,EAAKC,qBAAqBJ,KAA1B,MAC7B,EAAKK,uBAAyB,EAAKC,sBAAsBN,KAA3B,MAZjB,E,2DAeIO,GACjBC,KAAKpB,kBAAoBmB,I,iCAGfE,EAAMC,EAAMC,GACtBH,KAAKhB,SAASiB,GAAQ,CACrBC,OACAC,YAAaA,GAAeH,KAAKI,sB,iCAIxBC,GACV,GAAU,OAANA,GAAoB,KAANA,EACjBL,KAAKjB,QAAU,SAEX,MAAIuB,OAAOC,KAAKP,KAAKhB,UAAUwB,QAAQH,IAAM,GAIjD,MAAM,IAAII,MAAM,mBAHhBT,KAAKjB,QAAUsB,K,qCAOFK,GACdV,KAAKI,mBAAqBM,I,6BAI1BV,KAAKW,iBAAiBC,OACtBZ,KAAKa,SAAU,I,qCAGDC,GACdd,KAAKe,eAAiBD,I,wCAGLE,GACbA,IACHC,QAAQC,IAAI,oBAAqBF,GACZ,OAAjBhB,KAAKjB,SAAoBiC,IAAYhB,KAAKjB,QAC7CiB,KAAKmB,KAAK,UAAWH,GAGrBC,QAAQC,IAAI,iBAAkBF,M,oCAKnBI,GACbpB,KAAKmB,KAAK,QAASC,K,2CAGClB,EAAMmB,GAC1BrB,KAAKmB,KAAK,OAAQjB,EAAMmB,K,4CAGHC,EAAeC,GACpCvB,KAAKuB,SAAWA,EAChBvB,KAAKmB,KAAK,WAAYG,K,8BAItB,IAAItB,KAAKa,QAAT,CACAb,KAAKa,SAAU,EACfb,KAAKW,iBAAmBhC,EACvBqB,KAAKpB,kBACLoB,KAAKe,eAAe,uBACpBf,KAAKe,eAAe,2BAErB,IAAIS,EAAa,GACbC,EAAgB,GACpB,IAAK,IAAIC,KAAM1B,KAAKhB,SAAU,CAC7B,IAAI2C,EAAI3B,KAAKhB,SAAS0C,GACtBF,EAAWE,GAAMC,EAAEzB,KACnBuB,EAAcG,KAAKD,EAAExB,aAEtBH,KAAKW,iBAAiBkB,MAAML,EAAY,IAAIM,aAAaL,GAAgBzB,KAAK+B,MAAO/B,KAAKV,mBAAoBU,KAAKP,eAAgBO,KAAKL,sBAAuBK,KAAKH,2B,+BAG5JmC,GACRhC,KAAKgC,MAAQA,EACThC,KAAKuB,WACJS,GACHhC,KAAK+B,MAAQ/B,KAAKuB,SAASU,KAAKC,MAChClC,KAAKuB,SAASU,KAAKC,MAAQ,GAG3BlC,KAAKuB,SAASU,KAAKC,MAAQlC,KAAK+B,OAAS,K,mCAK/BI,GACZnC,KAAK+B,MAAQI,EACTnC,KAAKuB,WAAUvB,KAAKuB,SAASU,KAAKC,MAAQC,O,GA9GxB1D,GAkHxB2D,EAAOC,QAAUvD,EACjBsD,EAAOC,QAAQxD,iBAAmBA,G,6EC1FlCuD,EAAOC,QA9BmB,SAAUzD,EAAmB0D,EAAuBC,GAC7E,IAAIC,EA0BJ,MAAO,CAACX,MAxBI,SAAUL,EAAYC,EAAegB,EAAQlD,EAAmBG,EAAeE,EAAsB8C,IAChHF,EAAkB,IAAIG,OAAOL,IACbM,YAAY,CAC3BC,QAAS,OACTrB,WAAYA,EACZC,cAAeA,IAGhBe,EAAgBM,UAAY,SAAU1B,GACrC7B,EAAkB6B,EAAElB,KAAKc,UAG1BpC,EAAkBiD,MAAM,CAAC7B,MAAOyC,EAAQF,EAAoB7C,EAAeE,EAAsB8C,IAY5EK,aAJH,SAAUC,GAC5BR,EAAgBI,YAAY,CAACC,QAAS,UAAWI,WAAYD,KAGZpC,KATvC,WACVhC,EAAkBgC,OAClB4B,EAAgBI,YAAY,CAACC,QAAS,gB,cCpBxC,IAAIK,EAGAC,EACA7B,EACA8B,EACAC,EACAC,EACA/B,EANAgC,GAAc,EAkElBnB,EAAOC,QAAU,CAACR,MA1DN,SAAU2B,EAASf,EAAQgB,EAAmB/D,EAAeE,EAAsB8C,GACzFQ,GACJQ,UAAUC,aAAaC,aAAa,CAACC,OAAO,IAC3CC,MAAK,SAAAC,GACLX,EAAe,IAAKY,OAAOC,cAAgBD,OAAOE,oBAClDb,EAAcD,EAAae,wBAAwBJ,GACnDT,EAAcS,EAEdxC,EAAW6B,EAAagB,aACxBf,EAAYgB,QAAQ9C,GACpBA,EAASU,KAAKC,MAAQO,GAAU,GAEhCU,EAAiBC,EAAakB,sBAAsB,KAAM,EAAG,IAC9CC,eAAiB,SAAUnD,GACzC,GAAKmC,EAAL,CAGA,IAAMrD,EAAOkB,EAAEoD,YAAYC,eAAe,GAC1CvB,EAAYN,YAAY,CAACC,QAAS,UAAWI,WAAY/C,MAG1DqB,EAAS8C,QAAQlB,GACjBA,EAAekB,QAAQjB,EAAasB,aAEpCxB,EAAc,IAAIP,OAAOc,GACzB,IAAMpC,EAAagC,EAAYsB,QAAQtD,WACvC6B,EAAYN,YAAY,CAACC,QAAS,OAAQ+B,gBAAiBvD,IAC3D6B,EAAYJ,UAAY,SAAU1B,GACjCoC,EAAQqB,SAAQ,SAAUC,GACzBA,EAAO/B,aAAa3B,EAAElB,SAGnBN,GACHA,EAAqBwB,EAAElB,OAIzBoB,EAAgB8B,EAAa2B,iBAC7BxD,EAAS8C,QAAQ/C,GACjBoB,EAAqBpB,EAAeC,MAEpCyD,MAAMtF,GAGR6D,GAAc,GAciB3C,KAXrB,WACV2C,GAAc,EACVjC,GAAeA,EAAc2D,aAC7B9B,GAAgBA,EAAe8B,aAC/B1D,GAAUA,EAAS0D,aACnB3B,GAAaA,EAAY4B,YAAY,GAAGtE,OACxCwC,GAAcA,EAAa+B,QAC/BjC,EAAYN,YAAY,CAACC,QAAS,UAClCK,EAAc,Q,kCCjETkC,E,wBACL,WAAYC,EAAUC,GAAQ,UAC7BtF,KAAKqF,SAAWA,EAChBrF,KAAKsF,OAASA,EACdtF,KAAKuF,SAAU,EAEfF,EAASG,QAAU,KACnBxF,KAAKyF,aAAeJ,EAASK,kBAC7B1F,KAAK2F,UAAY,IAAIC,WAAW5F,KAAKyF,cAErCzF,KAAK6F,IAAMP,EAAOQ,WAAW,MAC7B9F,KAAK+F,UAAU,OAAQ,QACvB/F,KAAK6F,IAAIG,UAAY,IACrBhG,KAAKiG,MAAQjG,KAAKkG,KAAK1G,KAAKQ,M,4CAEnBmG,EAAWC,GAChBD,IAAWnG,KAAK6F,IAAIQ,YAAcF,GAClCC,IAASpG,KAAKsG,QAAUF,K,6BAEtB,IACCd,EAA6BtF,KAA7BsF,OAAQG,EAAqBzF,KAArByF,aAAcI,EAAO7F,KAAP6F,IAC7B7F,KAAKqF,SAASkB,sBAAsBvG,KAAK2F,WAErC3F,KAAKsG,SACRT,EAAIW,UAAYxG,KAAKsG,QACrBT,EAAIY,SAAS,EAAG,EAAGnB,EAAOoB,MAAOpB,EAAOqB,SAGxCd,EAAIe,UAAU,EAAG,EAAGtB,EAAOoB,MAAOpB,EAAOqB,QAGtC3G,KAAKgC,QACR6D,EAAIW,UAAYX,EAAIQ,YACpBR,EAAIgB,KAAO,aACXhB,EAAIiB,SAAS,QAASxB,EAAOoB,MAAM,EAAI,GAAIpB,EAAOqB,OAAO,EAAI,KAG9Dd,EAAIkB,YAKJ,IAHA,IAAIC,EAA4B,EAAf1B,EAAOoB,MAAcjB,EAClCwB,EAAI,EAECC,EAAI,EAAGA,EAAIzB,EAAcyB,IAAK,CACtC,IACCC,EADQnH,KAAK2F,UAAUuB,GAAK,IACpB5B,EAAOqB,OAAS,EAEf,IAANO,EACHrB,EAAIuB,OAAOH,EAAGE,GAGdtB,EAAIwB,OAAOJ,EAAGE,GAEfF,GAAKD,EAGNnB,EAAIwB,OAAO/B,EAAOoB,MAAOpB,EAAOqB,OAAS,GACzCd,EAAIyB,SAEAtH,KAAKuF,SAASgC,sBAAsBvH,KAAKiG,S,8BAG7CjG,KAAKuF,SAAU,EACfvF,KAAKkG,S,6BAGLlG,KAAKuF,SAAU,I,+BAEPvD,GACRhC,KAAKgC,MAAQA,M,KAIfI,EAAOC,QAAU+C,G,cCxEjBhD,EAAOC,QAAU,IAAIuD,WAAW,CAC9B,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAClE,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAClE,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAClE,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAClE,IAAM,IAAM,GAAM,IAAM,EAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAClE,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAClE,IAAM,GAAM,GAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAClE,IAAM,GAAM,IAAM,GAAM,GAAM,IAAM,GAAM,O,4HCJtC4B,EAAY,I,OAAI1I,GAEtB0I,EAAUrI,eAAe,IAEzBqI,EAAUpI,eAAe,uBAEzBoI,EAAUC,WAAW,YAAa/I,EAAQ,KAE1C8I,EAAUE,WAAW,a,IAgENC,E,YA7Dd,aAAe,IAAD,uBACb,+CAEKC,MAAQ,CACZC,MAAO,GACPhH,SAAS,GAGV,IAAMiH,EAAQ,IAAIC,MAAM,2BARX,OAUbP,EAAUQ,GAAG,WAAW,SAACjJ,GACxB+I,EAAMG,OAD8B,IAE7BJ,EAAS,EAAKD,MAAdC,MACPA,EAAMjG,KAAK7C,GACX,EAAKmJ,SAAS,CAACL,aAdH,E,qEAmBb7H,KAAKkI,SAAS,CACbrH,SAAS,IAGV2G,EAAU3F,U,6BAIV7B,KAAKkI,SAAS,CACbrH,SAAS,EACTgH,MAAO,KAGRL,EAAU5G,S,+BAGD,IAAD,OACR,OACC,yBAAKuH,UAAU,OAEd,4BAAQC,QAAS,SAAAhH,GAAO,EAAKS,UAA7B,SACA,4BAAQuG,QAAS,SAAAhH,GAAO,EAAKR,SAA7B,QAEEZ,KAAKqI,mB,sCAOT,GAAIrI,KAAK4H,MAAM/G,QAAS,OAAQ,6BAC/B,gDAEA,4BACEb,KAAK4H,MAAMC,MAAMS,KAAI,SAACC,EAAMrB,GAC5B,OAAQ,wBAAIsB,IAAKtB,GAAIqB,Y,GAvDME,aCFZC,QACW,cAA7B1E,OAAO2E,SAASC,UAEe,UAA7B5E,OAAO2E,SAASC,UAEhB5E,OAAO2E,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAuBC,SAASC,eAAe,SD2HzD,kBAAmBvF,WACrBA,UAAUwF,cAAcC,MAAMrF,MAAK,SAAAsF,GACjCA,EAAaC,kB","file":"static/js/main.9a118c09.chunk.js","sourcesContent":["const EventEmitter = require('events');\nconst PorcupineManager = require('./porcupine_manager');\nconst webVoiceProcessor = require('./web-voice-processor');\nconst SpectrumAnalyser = require('./spectrum-analyser');\n\nclass BumbleBee extends EventEmitter {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.hotword = null;\n\t\tthis.hotwords = {};\n\t\tthis.setMicVolume(1);\n\t\tthis.setMuted(false);\n\t\tthis.setSensitivity(0.5);\n\t\tthis.setWorkersPath('/');\n\t\tthis.setVoiceProcessor(webVoiceProcessor);\n\t\tthis._detectionCallback = this.detectionCallback.bind(this);\n\t\tthis._errorCallback = this.errorCallback.bind(this);\n\t\tthis._audioProcessCallback = this.audioProcessCallback.bind(this);\n\t\tthis._audioAnalyserCallback = this.audioAnalyserCallback.bind(this);\n\t}\n\t\n\tsetVoiceProcessor(proc) {\n\t\tthis.webVoiceProcessor = proc;\n\t}\n\t\n\taddHotword(name, data, sensitivity) {\n\t\tthis.hotwords[name] = {\n\t\t\tdata,\n\t\t\tsensitivity: sensitivity || this.defaultSensitivity\n\t\t};\n\t}\n\t\n\tsetHotword(w) {\n\t\tif (w === null || w === '') {\n\t\t\tthis.hotword = null;\n\t\t}\n\t\telse if (Object.keys(this.hotwords).indexOf(w) > -1) {\n\t\t\tthis.hotword = w;\n\t\t}\n\t\telse {\n\t\t\tthrow new Error('invalid hotword');\n\t\t}\n\t}\n\t\n\tsetSensitivity(s) {\n\t\tthis.defaultSensitivity = s;\n\t}\n\t\n\tstop() {\n\t\tthis.porcupineManager.stop();\n\t\tthis.started = false;\n\t}\n\t\n\tsetWorkersPath(path) {\n\t\tthis.webWorkersPath = path;\n\t}\n\t\n\tdetectionCallback(keyword) {\n\t\tif (keyword) {\n\t\t\tconsole.log('bumblebee keyword', keyword);\n\t\t\tif (this.hotword === null || keyword === this.hotword) {\n\t\t\t\tthis.emit('hotword', keyword);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log('wrong hotword:', keyword);\n\t\t\t}\n\t\t}\n\t}\n\t\n\terrorCallback(e) {\n\t\tthis.emit('error', e);\n\t}\n\t\n\taudioProcessCallback(data, sampleRate) {\n\t\tthis.emit('data', data, sampleRate);\n\t}\n\t\n\taudioAnalyserCallback(audioAnalyser, gainNode) {\n\t\tthis.gainNode = gainNode;\n\t\tthis.emit('analyser', audioAnalyser);\n\t}\n\t\n\tstart() {\n\t\tif (this.started) return;\n\t\tthis.started = true;\n\t\tthis.porcupineManager = PorcupineManager(\n\t\t\tthis.webVoiceProcessor,\n\t\t\tthis.webWorkersPath+\"/porcupine_worker.js\",\n\t\t\tthis.webWorkersPath+\"/downsampling_worker.js\");\n\t\t\n\t\tlet keywordIDs = {};\n\t\tlet sensitivities = [];\n\t\tfor (let id in this.hotwords) {\n\t\t\tlet h = this.hotwords[id];\n\t\t\tkeywordIDs[id] = h.data;\n\t\t\tsensitivities.push(h.sensitivity);\n\t\t}\n\t\tthis.porcupineManager.start(keywordIDs, new Float32Array(sensitivities), this._gain, this._detectionCallback, this._errorCallback, this._audioProcessCallback, this._audioAnalyserCallback);\n\t}\n\t\n\tsetMuted(muted) {\n\t\tthis.muted = muted;\n\t\tif (this.gainNode) {\n\t\t\tif (muted) {\n\t\t\t\tthis._gain = this.gainNode.gain.value;\n\t\t\t\tthis.gainNode.gain.value = 0;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.gainNode.gain.value = this._gain || 1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tsetMicVolume(vol) {\n\t\tthis._gain = vol;\n\t\tif (this.gainNode) this.gainNode.gain.value = vol;\n\t}\n}\n\nmodule.exports = BumbleBee;\nmodule.exports.SpectrumAnalyser = SpectrumAnalyser;","const PorcupineManager = (function (webVoiceProcessor, porcupineWorkerScript, downsamplingScript) {\n\tlet porcupineWorker;\n\t\n\tlet start = function (keywordIDs, sensitivities, volume, detectionCallback, errorCallback, audioProcessCallback, audioContextCallback) {\n\t\tporcupineWorker = new Worker(porcupineWorkerScript);\n\t\tporcupineWorker.postMessage({\n\t\t\tcommand: \"init\",\n\t\t\tkeywordIDs: keywordIDs,\n\t\t\tsensitivities: sensitivities\n\t\t});\n\t\t\n\t\tporcupineWorker.onmessage = function (e) {\n\t\t\tdetectionCallback(e.data.keyword);\n\t\t};\n\t\t\n\t\twebVoiceProcessor.start([this], volume, downsamplingScript, errorCallback, audioProcessCallback, audioContextCallback);\n\t};\n\t\n\tlet stop = function () {\n\t\twebVoiceProcessor.stop();\n\t\tporcupineWorker.postMessage({command: \"release\"});\n\t};\n\t\n\tlet processFrame = function (frame) {\n\t\tporcupineWorker.postMessage({command: \"process\", inputFrame: frame});\n\t};\n\t\n\treturn {start: start, processFrame: processFrame, stop: stop};\n});\n\nmodule.exports = PorcupineManager;","let downsampler;\n\nlet isRecording = false;\nlet audioProcessor;\nlet audioAnalyser;\nlet audioContext;\nlet audioSource;\nlet audioStream;\nlet gainNode;\n\nlet start = function (engines, volume, downsamplerScript, errorCallback, audioProcessCallback, audioContextCallback) {\n\tif (!downsampler) {\n\t\tnavigator.mediaDevices.getUserMedia({audio: true})\n\t\t.then(stream => {\n\t\t\taudioContext = new (window.AudioContext || window.webkitAudioContext)();\n\t\t\taudioSource = audioContext.createMediaStreamSource(stream);\n\t\t\taudioStream = stream;\n\t\t\t\n\t\t\tgainNode = audioContext.createGain();\n\t\t\taudioSource.connect(gainNode);\n\t\t\tgainNode.gain.value = volume || 1;\n\t\t\t\n\t\t\taudioProcessor = audioContext.createScriptProcessor(4096, 1, 1);\n\t\t\taudioProcessor.onaudioprocess = function (e) {\n\t\t\t\tif (!isRecording) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst data = e.inputBuffer.getChannelData(0);\n\t\t\t\tdownsampler.postMessage({command: \"process\", inputFrame: data});\n\t\t\t};\n\t\t\t\n\t\t\tgainNode.connect(audioProcessor);\n\t\t\taudioProcessor.connect(audioContext.destination);\n\t\t\t\n\t\t\tdownsampler = new Worker(downsamplerScript);\n\t\t\tconst sampleRate = audioSource.context.sampleRate;\n\t\t\tdownsampler.postMessage({command: \"init\", inputSampleRate: sampleRate});\n\t\t\tdownsampler.onmessage = function (e) {\n\t\t\t\tengines.forEach(function (engine) {\n\t\t\t\t\tengine.processFrame(e.data);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tif (audioProcessCallback) {\n\t\t\t\t\taudioProcessCallback(e.data);\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\taudioAnalyser = audioContext.createAnalyser();\n\t\t\tgainNode.connect(audioAnalyser);\n\t\t\taudioContextCallback(audioAnalyser, gainNode);\n\t\t})\n\t\t.catch(errorCallback);\n\t}\n\t\n\tisRecording = true;\n};\n\nlet stop = function () {\n\tisRecording = false;\n\tif (audioAnalyser) audioAnalyser.disconnect();\n\tif (audioProcessor) audioProcessor.disconnect();\n\tif (gainNode) gainNode.disconnect();\n\tif (audioStream) audioStream.getTracks()[0].stop();\n\tif (audioContext) audioContext.close();\n\tdownsampler.postMessage({command: \"reset\"});\n\tdownsampler = null;\n};\n\nmodule.exports = {start: start, stop: stop};\n","class SpectrumAnalyzer {\n\tconstructor(analyser, canvas) {\n\t\tthis.analyser = analyser;\n\t\tthis.canvas = canvas;\n\t\tthis.drawing = false;\n\t\t\n\t\tanalyser.fftSize = 2048;\n\t\tthis.bufferLength = analyser.frequencyBinCount;\n\t\tthis.dataArray = new Uint8Array(this.bufferLength);\n\t\t\n\t\tthis.ctx = canvas.getContext('2d');\n\t\tthis.setColors('#fff', '#000');\n\t\tthis.ctx.lineWidth = 1.5;\n\t\tthis._draw = this.draw.bind(this);\n\t}\n\tsetColors(linecolor, bgcolor) {\n\t\tif (linecolor) this.ctx.strokeStyle = linecolor;\n\t\tif (bgcolor) this.bgColor = bgcolor;\n\t}\n\tdraw() {\n\t\tconst {canvas, bufferLength, ctx} = this;\n\t\tthis.analyser.getByteTimeDomainData(this.dataArray);\n\t\t\n\t\tif (this.bgColor) {\n\t\t\tctx.fillStyle = this.bgColor;\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\t}\n\t\telse {\n\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\t}\n\t\t\n\t\tif (this.muted) {\n\t\t\tctx.fillStyle = ctx.strokeStyle;\n\t\t\tctx.font = '14px Arial';\n\t\t\tctx.fillText('MUTED', canvas.width/2 - 25, canvas.height/2 - 10)\n\t\t}\n\t\t\n\t\tctx.beginPath();\n\t\t\n\t\tvar sliceWidth = canvas.width * 1.0 / bufferLength;\n\t\tvar x = 0;\n\t\t\n\t\tfor (var i = 0; i < bufferLength; i++) {\n\t\t\tvar v = (this.dataArray[i] / 128.0),\n\t\t\t\ty = v * canvas.height / 2;\n\t\t\t\n\t\t\tif (i === 0) {\n\t\t\t\tctx.moveTo(x, y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tctx.lineTo(x, y);\n\t\t\t}\n\t\t\tx += sliceWidth;\n\t\t}\n\t\t\n\t\tctx.lineTo(canvas.width, canvas.height / 2);\n\t\tctx.stroke();\n\t\t\n\t\tif (this.drawing) requestAnimationFrame(this._draw);\n\t}\n\tstart() {\n\t\tthis.drawing = true;\n\t\tthis.draw();\n\t}\n\tstop() {\n\t\tthis.drawing = false;\n\t}\n\tsetMuted(muted) {\n\t\tthis.muted = muted;\n\t}\n}\n\nmodule.exports = SpectrumAnalyzer;","module.exports = new Uint8Array([\n  0x8c, 0x14, 0x8b, 0x6f, 0x4b, 0xe9, 0x6a, 0x89, 0x90, 0xe1, 0xc0, 0x85,\n  0xee, 0x60, 0xee, 0x5c, 0xee, 0x4d, 0x7c, 0x3a, 0xd7, 0x15, 0xaf, 0x31,\n  0x7f, 0x4a, 0x34, 0xd5, 0x6a, 0x6f, 0xec, 0xe3, 0x0f, 0x74, 0xa8, 0x31,\n  0x19, 0xf7, 0x46, 0xb7, 0xb8, 0x3f, 0xa6, 0x37, 0x71, 0x3b, 0x14, 0xf2,\n  0xdc, 0xa5, 0x3d, 0x8b, 0x06, 0x84, 0xdb, 0x91, 0x47, 0xba, 0x49, 0x6c,\n  0xcc, 0x72, 0x51, 0x14, 0xad, 0x35, 0xe9, 0x51, 0x27, 0x70, 0x9a, 0x4a,\n  0x7c, 0x26, 0x34, 0x2c, 0x67, 0x50, 0xab, 0x40, 0xf6, 0xdb, 0xc4, 0x95,\n  0xfa, 0x56, 0xc7, 0x12, 0x55, 0xc4, 0x2e, 0x94\n]);","import React, {Component} from 'react';\n\nimport BumbleBee from 'bumblebee-hotword';\n\nconst bumblebee = new BumbleBee();\n\nbumblebee.setSensitivity(0.5);\n\nbumblebee.setWorkersPath('./bumblebee-workers');\n\nbumblebee.addHotword('bumblebee', require('bumblebee-hotword/hotwords/bumblebee'));\n\nbumblebee.setHotword('bumblebee');\n\nclass BumbleBeeBasicApp extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\t\n\t\tthis.state = {\n\t\t\twords: [],\n\t\t\tstarted: false\n\t\t};\n\t\t\n\t\tconst sound = new Audio('sounds/bumblebee-on.mp3');\n\t\t\n\t\tbumblebee.on('hotword', (hotword) => {\n\t\t\tsound.play();\n\t\t\tconst {words} = this.state;\n\t\t\twords.push(hotword);\n\t\t\tthis.setState({words});\n\t\t});\n\t}\n\t\n\tstart() {\n\t\tthis.setState({\n\t\t\tstarted: true\n\t\t});\n\t\t\n\t\tbumblebee.start();\n\t}\n\t\n\tstop() {\n\t\tthis.setState({\n\t\t\tstarted: false,\n\t\t\twords: []\n\t\t});\n\t\t\n\t\tbumblebee.stop();\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t\n\t\t\t\t<button onClick={e => { this.start() }}>Start</button>\n\t\t\t\t<button onClick={e => { this.stop() }}>Stop</button>\n\t\t\t\t\n\t\t\t\t{ this.renderStarted() }\n\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n\t\n\trenderStarted() {\n\t\tif (this.state.started) return (<div>\n\t\t\t<h3>Say \"bumblebee\":</h3>\n\t\t\t\n\t\t\t<ul>\n\t\t\t\t{this.state.words.map((word, i) => {\n\t\t\t\t\treturn (<li key={i}>{word}</li>);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</div>);\n\t}\n}\n\nexport default BumbleBeeBasicApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport BumbleBeeBasicApp from './BumbleBeeBasicApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BumbleBeeBasicApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}