{"version":3,"sources":["BumbleBeeApp.js","serviceWorker.js","index.js"],"names":["bumblebee","BumbleBee","setWorkersPath","addHotword","setHotword","Say","setWorkers","voice","language","profile","BumbleBeeApp","Component","constructor","super","this","state","hotwords","Object","keys","bumblebee_started","spokenHotwords","selectedHotword","sensivitiyChanged","sensitivity","action","muted","sounds","Audio","hey_edison","grasshopper","porcupine","terminator","blueberry","white_smoke","on","word","recognizeHotword","intData","floatData","sampleRate","hotword","console","log","componentDidMount","analyser","canvas","document","getElementById","SpectrumAnalyser","setMuted","start","render","className","value","onChange","e","changeHotword","renderHotwordOptions","changeSensitivity","renderSensitivities","changeAction","onClick","toggleHotword","toggleMuted","id","width","height","renderSay","renderBumblebees","join","h","map","i","key","unshift","s","n","p","push","target","options","selectedIndex","setState","alert","setSensitivity","stop","play","say","b","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ccece613.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Say from 'jaxcore-say';\n\nimport BumbleBee, {SpectrumAnalyser} from 'bumblebee-hotword';\n\nconst bumblebee = new BumbleBee();\n\nbumblebee.setWorkersPath('./bumblebee-workers');\n\nbumblebee.addHotword('bumblebee');\nbumblebee.addHotword('grasshopper');\nbumblebee.addHotword('hey_edison');\nbumblebee.addHotword('porcupine');\nbumblebee.addHotword('terminator');\nbumblebee.addHotword('blueberry');\nbumblebee.addHotword('white_smoke');\n\nbumblebee.setHotword('bumblebee');\n\nSay.setWorkers({\n\t'espeak': 'webworkers/espeak-en-worker.js'\n});\n\nvar voice = new Say({\n\tlanguage: 'en',\n\tprofile: 'Jack'\n});\n\nclass BumbleBeeApp extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\t\n\t\tthis.state = {\n\t\t\thotwords: Object.keys(bumblebee.hotwords),\n\t\t\tbumblebee_started: false,\n\t\t\tspokenHotwords: [],\n\t\t\tselectedHotword: null,\n\t\t\tsensivitiyChanged: false,\n\t\t\tsensitivity: 0.5,\n\t\t\taction: 'sounds',\n\t\t\tmuted: false\n\t\t};\n\t\t\n\t\tthis.sounds = {\n\t\t\tbumblebee: new Audio('sounds/bumblebee-on.mp3'),\n\t\t\they_edison: new Audio('sounds/hey_edison.mp3'),\n\t\t\tgrasshopper: new Audio('sounds/grasshopper.mp3'),\n\t\t\tporcupine: new Audio('sounds/porcupine.mp3'),\n\t\t\tterminator: new Audio('sounds/terminator.mp3'),\n\t\t\tblueberry: new Audio('sounds/blueberry.mp3'),\n\t\t\twhite_smoke: new Audio('sounds/white_smoke.mp3')\n\t\t};\n\t\t\n\t\tbumblebee.on('hotword', (word) => {\n\t\t\tthis.recognizeHotword(word);\n\t\t});\n\t\t\n\t\tbumblebee.on('data', (intData, floatData, sampleRate, hotword) => {\n\t\t\tif (hotword) {\n\t\t\t\tconsole.log('data', intData, floatData, sampleRate, hotword);\n\t\t\t\tdebugger;\n\t\t\t}\n\t\t});\n\t}\n\t\n\tcomponentDidMount() {\n\t\tbumblebee.setHotword(this.state.selectedHotword);\n\t\t\n\t\tbumblebee.on('analyser', (analyser) => {\n\t\t\tconsole.log('analyser', analyser);\n\t\t\tvar canvas = document.getElementById('oscilloscope');\n\t\t\tthis.analyser = new SpectrumAnalyser(analyser, canvas);\n\t\t\tif (this.state.muted) {\n\t\t\t\tbumblebee.setMuted(true);\n\t\t\t\tthis.analyser.setMuted(true);\n\t\t\t}\n\t\t\tthis.analyser.start();\n\t\t});\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t\n\t\t\t\tHotword: <select value={this.state.selectedHotword||''} onChange={e => this.changeHotword(e)}>\n\t\t\t\t\t{ this.renderHotwordOptions() }\n\t\t\t\t</select>\n\t\t\t\t\n\t\t\t\t<br/>\n\t\t\t\t\n\t\t\t\tSensitivity: <select value={this.state.sensitivity||''} onChange={e => this.changeSensitivity(e)}>\n\t\t\t\t\t{ this.renderSensitivities() }\n\t\t\t\t</select>\n\t\t\t\t\n\t\t\t\t<br/>\n\t\t\t\t\n\t\t\t\tAction: <select value={this.state.action||''} onChange={e => this.changeAction(e)}>\n\t\t\t\t\t<option value=\"sounds\">Sounds</option>\n\t\t\t\t\t<option value=\"texttospeech\">Speech To Text</option>\n\t\t\t\t</select>\n\t\t\t\t\n\t\t\t\t<br/>\n\t\t\t\t\n\t\t\t\t<button onClick={e => this.toggleHotword()}>\n\t\t\t\t\t{this.state.bumblebee_started ? 'Stop' : 'Start'}\n\t\t\t\t</button>\n\t\t\t\t\n\t\t\t\t<button onClick={e => this.toggleMuted()}>\n\t\t\t\t\t{this.state.muted ? 'Unmute' : 'Mute'}\n\t\t\t\t</button>\n\t\t\t\t\n\t\t\t\t<br/>\n\t\t\t\t<canvas id=\"oscilloscope\" width=\"800\" height=\"100\" />\n\t\t\t\t\n\t\t\t\t{this.renderSay()}\n\t\t\t\t\n\t\t\t\t{this.renderBumblebees()}\n\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n\t\n\trenderSay() {\n\t\tif (!this.state.bumblebee_started) return;\n\t\tif (this.state.selectedHotword) return (<h3>Say \"{this.state.selectedHotword}\":</h3>);\n\t\telse return (<h4>Say any of the following: {this.state.hotwords.join(', ')}:</h4>);\n\t}\n\t\n\trenderHotwordOptions() {\n\t\tlet h = this.state.hotwords.map((hotword,i) => {\n\t\t\treturn (<option key={i} value={hotword}>{hotword}</option>);\n\t\t});\n\t\th.unshift(<option key={'null'} value={''}>* Any *</option>);\n\t\treturn h;\n\t}\n\t\n\trenderSensitivities(e) {\n\t\tlet s = [];\n\t\tfor (let i=0;i<=10;i++) {\n\t\t\tlet n = i / 10;\n\t\t\tlet p = i * 10;\n\t\t\ts.push(<option key={i} value={n}>{p}%</option>);\n\t\t}\n\t\treturn s;\n\t}\n\t\n\tchangeAction(e) {\n\t\tlet action = e.target.options[e.target.selectedIndex].value;\n\t\tthis.setState({\n\t\t\taction\n\t\t});\n\t}\n\t\n\tchangeSensitivity(e) {\n\t\tlet sensitivity = e.target.options[e.target.selectedIndex].value;\n\t\t\n\t\tif (this.state.sensivitiyChanged) {\n\t\t\talert('Sensitivity can only be set before .start(), reload and try again');\n\t\t}\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\tsensitivity\n\t\t\t});\n\t\t\tbumblebee.setSensitivity(sensitivity);\n\t\t}\n\t}\n\t\n\tchangeHotword(e) {\n\t\t// todo: move to server\n\t\tlet selectedHotword = e.target.options[e.target.selectedIndex].value;\n\t\tbumblebee.setHotword(selectedHotword);\n\t\tthis.setState({\n\t\t\tselectedHotword,\n\t\t\tspokenHotwords: []\n\t\t});\n\t}\n\t\n\ttoggleHotword() {\n\t\tlet hotword = this.state.selectedHotword;\n\t\tif (!this.state.bumblebee_started) {\n\t\t\tconsole.log('starting', hotword);\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tbumblebee_started: true,\n\t\t\t\tspokenHotwords: [],\n\t\t\t\tsensivitiyChanged: true\n\t\t\t});\n\t\t\t\n\t\t\tbumblebee.start();\n\t\t\t\n\t\t}\n\t\telse {\n\t\t\tbumblebee.stop();\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tbumblebee_started: false,\n\t\t\t\tspokenHotwords: []\n\t\t\t});\n\t\t}\n\t}\n\t\n\ttoggleMuted() {\n\t\tconst muted = !this.state.muted;\n\t\tthis.setState({\n\t\t\tmuted\n\t\t}, () => {\n\t\t\tbumblebee.setMuted(muted);\n\t\t\tif (this.analyser) this.analyser.setMuted(muted);\n\t\t});\n\t}\n\t\n\trecognizeHotword(hotword) {\n\t\tif (hotword === this.state.selectedHotword || !this.state.selectedHotword) {\n\t\t\t\n\t\t\tif (this.state.action === 'sounds') {\n\t\t\t\tif (this.sounds[hotword]) this.sounds[hotword].play();\n\t\t\t}\n\t\t\telse if (this.state.action === 'texttospeech') {\n\t\t\t\tvoice.say(hotword + 'detected');\n\t\t\t}\n\t\t\t\n\t\t\tconst spokenHotwords = this.state.spokenHotwords;\n\t\t\tspokenHotwords.push(hotword);\n\t\t\t\n\t\t\tconsole.log('recognized hotword', hotword);\n\t\t\tthis.setState({\n\t\t\t\tspokenHotwords\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tconsole.log('did not recognize', hotword);\n\t\t}\n\t}\n\t\n\trenderBumblebees() {\n\t\tlet b = this.state.spokenHotwords.map((word,i) => {\n\t\t\treturn (<li key={i}>{word}</li>);\n\t\t});\n\t\treturn (<ul>\n\t\t\t{b}\n\t\t</ul>);\n\t}\n\t\n}\n\nexport default BumbleBeeApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport BumbleBeeApp from './BumbleBeeApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BumbleBeeApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}